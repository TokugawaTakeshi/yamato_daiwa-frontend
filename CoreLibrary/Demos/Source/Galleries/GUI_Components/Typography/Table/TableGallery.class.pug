-

  class TableGalleryOptions {

    static mustVisuallyHideTopHeading = false;

    static visuallyHideTopHeadingIf(condition) {
      TableGalleryOptions.mustVisuallyHideTopHeading = condition;
      return TableGalleryOptions;
    }


    static mustVisuallyHideAllHeadings = false;

    static visuallyHideAllHeadings() {
      TableGalleryOptions.mustVisuallyHideAllHeadings = true;
      TableGalleryOptions.mustVisuallyHideTopHeading = true;
      return TableGalleryOptions;
    }


    static Partials = {
      minimal: "MINIMAL"
    };

    static partialsRenderingFlags =
        Object.values(TableGalleryOptions.Partials).
        reduce(
          (objectWorkpiece, partialValue) => {
            objectWorkpiece[partialValue] = true;
            return objectWorkpiece;
          },
          {}
        );

    static renderSinglePartial(targetPartialValue) {

      for (const [ partialKey, partialValue ] of Object.entries(TableGalleryOptions.Partials)) {
        TableGalleryOptions.partialsRenderingFlags[partialValue] =
            TableGalleryOptions.Partials[partialKey] === targetPartialValue;
      }

      return TableGalleryOptions;

    }

  }
