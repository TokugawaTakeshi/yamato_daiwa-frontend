-

  class FilesUploaderGalleryOptions {

    static mustVisuallyHideTopHeading = false;

    static visuallyHideTopHeadingIf(condition) {
      FilesUploaderGalleryOptions.mustVisuallyHideTopHeading = condition;
      return FilesUploaderGalleryOptions;
    }


    static mustVisuallyHideAllHeadings = false;

    static visuallyHideAllHeadings() {
      FilesUploaderGalleryOptions.mustVisuallyHideAllHeadings = true;
      FilesUploaderGalleryOptions.mustVisuallyHideTopHeading = true;
      return FilesUploaderGalleryOptions;
    }


    static Partials = {
      minimal: "MINIMAL",
      noDragAndDrop: "NO_DRAG_AND_DROP",
      noFilePickingButton: "NO_FILE_PICKING_BUTTON",
      singleImagePreview: "SINGLE_IMAGE_PREVIEW",
      multipleImagesPreview: "MULTIPLE_IMAGES_PREVIEW",
      uploadingStatus: "UPLOADING_STATUS"
    };

    static partialsRenderingFlags =
        Object.values(FilesUploaderGalleryOptions.Partials).
        reduce(
          (objectWorkpiece, partialValue) => {
            objectWorkpiece[partialValue] = true;
            return objectWorkpiece;
          },
          {}
        );

    static renderSinglePartial(targetPartialValue) {

      for (const [ partialKey, partialValue ] of Object.entries(FilesUploaderGalleryOptions.Partials)) {
        FilesUploaderGalleryOptions.partialsRenderingFlags[partialValue] =
            FilesUploaderGalleryOptions.Partials[partialKey] === targetPartialValue;
      }

      return FilesUploaderGalleryOptions;

    }

  }
