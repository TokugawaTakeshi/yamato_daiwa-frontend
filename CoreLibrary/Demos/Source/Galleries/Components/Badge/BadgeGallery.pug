include BadgeGalleryOptions.pug


mixin BadgeGallery

  -

    ThemesShowcase__YDF.
        setDefaultThemeKeyLabelPrefix("Badge__YDF.Themes.").
        setDefaultGeometricVariationLabelPrefix("Badge__YDF.GeometricVariations.").
        setDefaultDecorativeVariationLabelPrefix("Badge__YDF.DecorativeVariations.");

    const themeShowcaseCurrentIterationData = ThemesShowcase__YDF.initializeCurrentIterationData();

    const todayDate__localized__stringified = new Date().toLocaleDateString();



  h1.Heading1(
    class=(BadgeGalleryOptions.mustVisuallyHideTopHeading ? "YDF_Gallery-InvisibleHeading": [])
  ) Badge Component Demos


  //- ━━━ Minimal ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  if BadgeGalleryOptions.partialsRenderingFlags[BadgeGalleryOptions.Partials.minimal]

    h2.Heading2(
      class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
    ) Minimal

    +ThemesShowcase--YDF({
      themes: Badge__YDF.Themes,
      geometricVariations: Badge__YDF.GeometricVariations,
      decorativeVariations: Badge__YDF.DecorativeVariations,
      decorativeVariationsWrapperTag: "dl",
      decorativeVariationsWrapperAdditionalCSS_Classes: [ "BadgeGallery-BadgesTwoColumnsTable" ],
      iterationData: themeShowcaseCurrentIterationData
    })

      dt=`Badge__YDF.DecorativeVariations.${ themeShowcaseCurrentIterationData.decorativeVariation.key }`
      dd
        +Badge--YDF({
          value: "Value",
          theme: themeShowcaseCurrentIterationData.theme.value,
          geometricVariation: themeShowcaseCurrentIterationData.geometricVariation.value,
          decorativeVariation: themeShowcaseCurrentIterationData.decorativeVariation.value
        })


  //- ━━━ Keys and Values ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  if BadgeGalleryOptions.partialsRenderingFlags[BadgeGalleryOptions.Partials.keysAndValues]

    h2.Heading2(
      class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
    ) Keys and Values

    +ThemesShowcase--YDF({
      themes: Badge__YDF.Themes,
      geometricVariations: Badge__YDF.GeometricVariations,
      decorativeVariations: Badge__YDF.DecorativeVariations,
      decorativeVariationsWrapperTag: "dl",
      decorativeVariationsWrapperAdditionalCSS_Classes: [ "BadgeGallery-BadgesTwoColumnsTable" ],
      iterationData: themeShowcaseCurrentIterationData
    })

      dt=`Badge__YDF.DecorativeVariations.${ themeShowcaseCurrentIterationData.decorativeVariation.key }`
      dd
        +Badge--YDF({
          key: "Key",
          value: "Value",
          theme: themeShowcaseCurrentIterationData.theme.value,
          geometricVariation: themeShowcaseCurrentIterationData.geometricVariation.value,
          decorativeVariation: themeShowcaseCurrentIterationData.decorativeVariation.value
        })


  //- ━━━ Long Labels ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  if BadgeGalleryOptions.partialsRenderingFlags[BadgeGalleryOptions.Partials.longLabels]

    h2.Heading2(
      class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
    ) Long Labels

    .BadgeGallery-BadgesFlow.BadgeGallery-BadgesFlow__LimitedChildrenMaximalWidth

      +Badge--YDF({
        key: textOverflowSafetyTest,
        value: textOverflowSafetyTest,
        decorativeVariation: Badge__YDF.DecorativeVariations.achromaticPastel
      })


  //- ━━━ Icons, Keys and Values ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  if BadgeGalleryOptions.partialsRenderingFlags[BadgeGalleryOptions.Partials.iconsAndKeysAndValues]

    h2.Heading2(
      class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
    ) Icons, Keys and Values

    +ThemesShowcase--YDF({
      themes: Badge__YDF.Themes,
      geometricVariations: Badge__YDF.GeometricVariations,
      decorativeVariations: Badge__YDF.DecorativeVariations,
      decorativeVariationsWrapperTag: "dl",
      decorativeVariationsWrapperAdditionalCSS_Classes: [ "BadgeGallery-BadgesTwoColumnsTable" ],
      iterationData: themeShowcaseCurrentIterationData
    })

      dt=`Badge__YDF.DecorativeVariations.${ themeShowcaseCurrentIterationData.decorativeVariation.key }`
      dd
        +Badge--YDF({
          key: "Date",
          value: todayDate__localized__stringified,
          theme: themeShowcaseCurrentIterationData.theme.value,
          geometricVariation: themeShowcaseCurrentIterationData.geometricVariation.value,
          decorativeVariation: themeShowcaseCurrentIterationData.decorativeVariation.value
        }): +Calendar--YDF_Icon.Badge--YDF-SVG_Icon


  //- ━━━ Icons and Values ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  if BadgeGalleryOptions.partialsRenderingFlags[BadgeGalleryOptions.Partials.iconsAndValues]

    h2.Heading2(
      class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
    ) Icons and Values

    +ThemesShowcase--YDF({
      themes: Badge__YDF.Themes,
      geometricVariations: Badge__YDF.GeometricVariations,
      decorativeVariations: Badge__YDF.DecorativeVariations,
      decorativeVariationsWrapperTag: "dl",
      decorativeVariationsWrapperAdditionalCSS_Classes: [ "BadgeGallery-BadgesTwoColumnsTable" ],
      iterationData: themeShowcaseCurrentIterationData
    })

      dt=`Badge__YDF.DecorativeVariations.${ themeShowcaseCurrentIterationData.decorativeVariation.key }`
      dd
        +Badge--YDF({
          value: todayDate__localized__stringified,
          theme: themeShowcaseCurrentIterationData.theme.value,
          geometricVariation: themeShowcaseCurrentIterationData.geometricVariation.value,
          decorativeVariation: themeShowcaseCurrentIterationData.decorativeVariation.value
        }): +Calendar--YDF_Icon.Badge--YDF-SVG_Icon


  //- ━━━ Geometric Modifiers ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  if BadgeGalleryOptions.mustRenderGeometricModifiersSection

    h2.Heading2(
      class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
    ) Geometric Modifiers

    //- ─── Pill Shape ─────────────────────────────────────────────────────────────────────────────────────────────────
    if BadgeGalleryOptions.partialsRenderingFlags[BadgeGalleryOptions.Partials.pillShapeGeometricModifier]

      h3.Heading3(
        class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
      ) Pill Shape

      +ThemesShowcase--YDF({
        themes: Badge__YDF.Themes,
        geometricVariations: Badge__YDF.GeometricVariations,
        decorativeVariations: Badge__YDF.DecorativeVariations,
        decorativeVariationsWrapperTag: "dl",
        decorativeVariationsWrapperAdditionalCSS_Classes: [ "BadgeGallery-BadgesTwoColumnsTable" ],
        iterationData: themeShowcaseCurrentIterationData
      })

        dt=`Badge__YDF.DecorativeVariations.${ themeShowcaseCurrentIterationData.decorativeVariation.key }`
        dd
          +Badge--YDF({
            value: "Value",
            geometricVariation: themeShowcaseCurrentIterationData.geometricVariation.value,
            geometricModifiers: [ Badge__YDF.GeometricModifiers.pillShape ],
            decorativeVariation: themeShowcaseCurrentIterationData.decorativeVariation.value
          }): +Calendar--YDF_Icon.Badge--YDF-SVG_Icon


    //- ─── Single Line ────────────────────────────────────────────────────────────────────────────────────────────────
    if BadgeGalleryOptions.partialsRenderingFlags[BadgeGalleryOptions.Partials.singleLineGeometricModifier]

      h3.Heading3(
        class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
      ) Single Line

      .BadgeGallery-BadgesFlow.BadgeGallery-BadgesFlow__LimitedChildrenMaximalWidth

        +Badge--YDF({
          key: textOverflowSafetyTest,
          value: textOverflowSafetyTest,
          geometricModifiers: [ Badge__YDF.GeometricModifiers.singleLine ],
          decorativeVariation: Badge__YDF.DecorativeVariations.achromaticPastel
        })


  //- ━━━ Decorative Modifiers ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  if BadgeGalleryOptions.mustRenderDecorativeModifiersSection

    h2.Heading2(
      class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
    ) Decorative Modifiers


    //- ─── Borders Disguising ─────────────────────────────────────────────────────────────────────────────────────────
    if BadgeGalleryOptions.partialsRenderingFlags[BadgeGalleryOptions.Partials.bordersDisguisingDecorativeModifier]

      h3.Heading3(
        class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
      ) Borders Disguising

      +ThemesShowcase--YDF({
        themes: Badge__YDF.Themes,
        geometricVariations: Badge__YDF.GeometricVariations,
        decorativeVariations: Badge__YDF.DecorativeVariations,
        decorativeVariationsWrapperTag: "dl",
        decorativeVariationsWrapperAdditionalCSS_Classes: [ "BadgeGallery-BadgesTwoColumnsTable" ],
        iterationData: themeShowcaseCurrentIterationData
      })

        dt=`Badge__YDF.DecorativeVariations.${ themeShowcaseCurrentIterationData.decorativeVariation.key }`
        dd
          +Badge--YDF({
            value: "Value",
            geometricVariation: themeShowcaseCurrentIterationData.geometricVariation.value,
            decorativeVariation: themeShowcaseCurrentIterationData.decorativeVariation.value,
            decorativeModifiers: [ Badge__YDF.DecorativeModifiers.bordersDisguising ]
          }): +Calendar--YDF_Icon.Badge--YDF-SVG_Icon


    //- ─── No Background ──────────────────────────────────────────────────────────────────────────────────────────────
    if BadgeGalleryOptions.partialsRenderingFlags[BadgeGalleryOptions.Partials.noBackgroundDecorativeModifier]

      h3.Heading3(
        class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
      ) No Background

      +ThemesShowcase--YDF({
        themes: Badge__YDF.Themes,
        geometricVariations: Badge__YDF.GeometricVariations,
        decorativeVariations: Badge__YDF.DecorativeVariations,
        skipDecorativeVariationIf: iterationData => iterationData.decorativeVariation.key.includes("Bright"),
        decorativeVariationsWrapperTag: "dl",
        decorativeVariationsWrapperAdditionalCSS_Classes: [ "BadgeGallery-BadgesTwoColumnsTable" ],
        iterationData: themeShowcaseCurrentIterationData
      })

        dt=`Badge__YDF.DecorativeVariations.${ themeShowcaseCurrentIterationData.decorativeVariation.key }`
        dd
          +Badge--YDF({
            value: "Value",
            geometricVariation: themeShowcaseCurrentIterationData.geometricVariation.value,
            decorativeVariation: themeShowcaseCurrentIterationData.decorativeVariation.value,
            decorativeModifiers: [ Badge__YDF.DecorativeModifiers.noBackground ]
          }): +Calendar--YDF_Icon.Badge--YDF-SVG_Icon


  //- ━━━ Loading Placeholder ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  if BadgeGalleryOptions.partialsRenderingFlags[BadgeGalleryOptions.Partials.loadingPlaceholder]

    h2.Heading2(
      class=(BadgeGalleryOptions.mustVisuallyHideAllHeadings ? "YDF_Gallery-InvisibleHeading" : [])
    ) Loading Placeholder

    .BadgeGallery-BadgesFlow

      each geometricVariation in Object.values(Badge__YDF.GeometricVariations)

        +Badge--YDF-LoadingPlaceholder({ geometricVariation: geometricVariation })

        +Badge--YDF-LoadingPlaceholder({
          geometricVariation: geometricVariation,
          geometricModifiers: [ Badge__YDF.GeometricModifiers.pillShape ]
        })
