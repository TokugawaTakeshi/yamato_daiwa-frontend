-

  class ${COMPONENT_NAME}GalleryOptions {

    static mustVisuallyHideTopHeading = false;

    static visuallyHideTopHeadingIf(condition) {
      ${COMPONENT_NAME}GalleryOptions.mustVisuallyHideTopHeading = condition;
      return ${COMPONENT_NAME}GalleryOptions;
    }


    static mustVisuallyHideAllHeadings = false;

    static visuallyHideAllHeadings() {
      ${COMPONENT_NAME}GalleryOptions.mustVisuallyHideAllHeadings = true;
      ${COMPONENT_NAME}GalleryOptions.mustVisuallyHideTopHeading = true;
      return ${COMPONENT_NAME}GalleryOptions;
    }


    static Partials = {
      minimal: "MINIMAL",
      // TODO Add more
    };

    static partialsRenderingFlags =
        Object.values(${COMPONENT_NAME}GalleryOptions.Partials).
        reduce(
          (objectWorkpiece, partialValue) => {
            objectWorkpiece[partialValue] = true;
            return objectWorkpiece;
          },
          {}
        );

    static renderSinglePartial(targetPartialValue) {

      for (const [ partialKey, partialValue ] of Object.entries(${COMPONENT_NAME}GalleryOptions.Partials)) {
        ${COMPONENT_NAME}GalleryOptions.partialsRenderingFlags[partialValue] =
            ${COMPONENT_NAME}GalleryOptions.Partials[partialKey] === targetPartialValue;
      }

      return ${COMPONENT_NAME}GalleryOptions;

    }

  }