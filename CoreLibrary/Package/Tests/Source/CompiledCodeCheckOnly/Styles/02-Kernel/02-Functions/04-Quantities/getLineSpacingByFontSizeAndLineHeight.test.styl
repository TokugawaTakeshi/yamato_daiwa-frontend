/* === Execution
stylus Tests/Source/CompiledCodeCheckOnly/Styles/02-Kernel/02-Functions/04-Quantities/getLineSpacingByFontSizeAndLineHeight.test.styl `
    --out Tests/Build/CompiledCodeCheckOnly/Styles/02-Kernel/02-Functions/04-Quantities/getLineSpacingByFontSizeAndLineHeight.test.css `
    --include Styles
*/


@require "01-Assets.styl"
@require "02-Kernel.styl"


testForEquality(
  "If the `fontSize` is `10px` and `lineHeight` is `0`, the dimensional output must be `0px`.",
  getLineSpacingByFontSizeAndLineHeight({
    fontSize: 10px,
    lineHeight: 0,
    mustOutputDimensionalQuantityIfPossible: true
  }),
  0px
)

testForEquality(
  "If the `fontSize` is `10px` and `lineHeight` is `0`, the dimensionless output must be `0`.",
  getLineSpacingByFontSizeAndLineHeight({
    fontSize: 10px,
    lineHeight: 0,
    mustOutputDimensionalQuantityIfPossible: false
  }),
  0
)

testForEquality(
  "If the `fontSize` is `10px` and `lineHeight` is `14px`, the dimensional output must be `4px`.",
  getLineSpacingByFontSizeAndLineHeight({
    fontSize: 10px,
    lineHeight: 14px,
    mustOutputDimensionalQuantityIfPossible: true
  }),
  4px
)

testForEquality(
  "If the `fontSize` is `10px` and `lineHeight` is `14px`, the dimensionless output must be `0.4`.",
  getLineSpacingByFontSizeAndLineHeight({
    fontSize: 10px,
    lineHeight: 14px,
    mustOutputDimensionalQuantityIfPossible: false
  }),
  0.4
)

testForEquality(
  "If the `fontSize` is `1rem` and `lineHeight` is `1.2em`, the output will be `calc(1.2em - 1rem)` expression.",
  getLineSpacingByFontSizeAndLineHeight({
    fontSize: 1rem,
    lineHeight: 1.2em,
    mustOutputDimensionalQuantityIfPossible: false
  }),
  "calc(1.2em - 1rem)"
)

testForEquality(
  "If the `fontSize` is `10px` and `lineHeight` is `1.4`, the dimensional output must be `4px`.",
  getLineSpacingByFontSizeAndLineHeight({
    fontSize: 10px,
    lineHeight: 1.4,
    mustOutputDimensionalQuantityIfPossible: true
  }),
  4px
)

testForEquality(
  "If the `fontSize` is `10px` and `lineHeight` is `1.4`, the expected output is `0.4`, but because of IEEE754 behavior" +\
    "is will be 0.3999999999999999.",
  getLineSpacingByFontSizeAndLineHeight({
    fontSize: 10px,
    lineHeight: 1.4,
    mustOutputDimensionalQuantityIfPossible: false
  }),
  0.3999999999999999
)
