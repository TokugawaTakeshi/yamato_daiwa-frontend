/* === Execution
stylus Tests/Source/CompiledCodeCheckOnly/Styles/02-Kernel/02-Functions/07-OtherFunctions/getLineSpacingByFontSizeAndLineHeight.test.styl `
    --out Tests/Build/CompiledCodeCheckOnly/Styles/02-Kernel/02-Functions/07-OtherFunctions/getLineSpacingByFontSizeAndLineHeight.test.css `
    --include Styles
*/


@require "01-Assets.styl"
@require "02-Kernel.styl"


// [ Expected output ] 0
p(getLineSpacingByFontSizeAndLineHeight({ fontSize: 10px, lineHeight: 0, mustOutputDimensionalQuantityIfPossible: true }))

// [ Expected output ] 0
p(getLineSpacingByFontSizeAndLineHeight({ fontSize: 10px, lineHeight: 0, mustOutputDimensionalQuantityIfPossible: false }))


// [ Expected output ] 2px
p(getLineSpacingByFontSizeAndLineHeight({ fontSize: 10px, lineHeight: 12px, mustOutputDimensionalQuantityIfPossible: true }))

// [ Expected output ] 0.2
p(getLineSpacingByFontSizeAndLineHeight({ fontSize: 10px, lineHeight: 12px, mustOutputDimensionalQuantityIfPossible: false }))


// [ Expected output ] calc(18px - 1rem)
p(getLineSpacingByFontSizeAndLineHeight({ fontSize: 1rem, lineHeight: 18px, mustOutputDimensionalQuantityIfPossible: true }))

// [ Expected output ] calc(18px - 1rem)
p(getLineSpacingByFontSizeAndLineHeight({ fontSize: 1rem, lineHeight: 18px, mustOutputDimensionalQuantityIfPossible: false }))


// [ Expected output ]
p(getLineSpacingByFontSizeAndLineHeight({ fontSize: 1rem, lineHeight: 1.2, mustOutputDimensionalQuantityIfPossible: true }))

// [ Expected output ]
p(getLineSpacingByFontSizeAndLineHeight({ fontSize: 1rem, lineHeight: 1.2, mustOutputDimensionalQuantityIfPossible: false }))

