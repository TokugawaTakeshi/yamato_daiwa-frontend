/* === Execution
stylus Tests/Source/CompiledCodeCheckOnly/Styles/02-Kernel/02-Functions/07-OtherFunctions/getLineHeightByFontSizeAndLineSpacing.test.styl `
    --out Tests/Build/CompiledCodeCheckOnly/Styles/02-Kernel/02-Functions/07-OtherFunctions/getLineHeightByFontSizeAndLineSpacing.test.css `
    --include Styles
*/


@require "01-Assets.styl"
@require "02-Kernel.styl"


// [ Expected output ] 14px
p(
  getLineHeightByFontSizeAndLineSpacing({
    fontSize: 14px,
    lineSpacing: 0,
    mustMakeLineHeightEqualToFontSizeWhenLineSpacingIs0: true,
    mustOutputDimensionalQuantityIfPossible: true
  })
)

// [ Expected output ] 0px
p(
  getLineHeightByFontSizeAndLineSpacing({
    fontSize: 14px,
    lineSpacing: 0,
    mustMakeLineHeightEqualToFontSizeWhenLineSpacingIs0: false,
    mustOutputDimensionalQuantityIfPossible: true
  })
)

// [ Expected output ] 14px
p(
  getLineHeightByFontSizeAndLineSpacing({
    fontSize: 14px,
    lineSpacing: 0px,
    mustMakeLineHeightEqualToFontSizeWhenLineSpacingIs0: true,
    mustOutputDimensionalQuantityIfPossible: true
  })
)

// [ Expected output ] 0px
p(
  getLineHeightByFontSizeAndLineSpacing({
    fontSize: 14px,
    lineSpacing: 0px,
    mustMakeLineHeightEqualToFontSizeWhenLineSpacingIs0: false,
    mustOutputDimensionalQuantityIfPossible: true
  })
)


// [ Expected output ] 0
//p(getLineHeightByFontSizeAndLineSpacing({ fontSize: 14px, lineSpacing: 0, mustOutputDimensionalQuantityIfPossible: false }))
//p(getLineHeightByFontSizeAndLineSpacing({ fontSize: 14px, lineSpacing: 0px, mustOutputDimensionalQuantityIfPossible: false }))


// [ Expected output ] 12px
//p(getLineHeightByFontSizeAndLineSpacing({ fontSize: 10px, lineSpacing: 2px, mustOutputDimensionalQuantityIfPossible: true }))

// [ Expected output ] 1.2
//p(getLineHeightByFontSizeAndLineSpacing({ fontSize: 10px, lineSpacing: 2px, mustOutputDimensionalQuantityIfPossible: false }))


// [ Expected output ] calc(1rem + 2px)
//p(getLineHeightByFontSizeAndLineSpacing({ fontSize: 1rem, lineSpacing: 2px, mustOutputDimensionalQuantityIfPossible: true }))

// [ Expected output ] calc(1rem + 2px)
//p(getLineHeightByFontSizeAndLineSpacing({ fontSize: 1rem, lineSpacing: 2px, mustOutputDimensionalQuantityIfPossible: false }))
//
//
//// [ Expected output ] 1.2rem
//p(getLineHeightByFontSizeAndLineSpacing({ fontSize: 1rem, lineSpacing: 1.2, mustOutputDimensionalQuantityIfPossible: true }))
//
//// [ Expected output ] 1.2
//p(getLineHeightByFontSizeAndLineSpacing({ fontSize: 1rem, lineSpacing: 1.2, mustOutputDimensionalQuantityIfPossible: false }))
