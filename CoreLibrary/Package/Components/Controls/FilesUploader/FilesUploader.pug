include FilesUploader.class.pug


mixin FilesUploader--YDF(properties, statesSimulations)

  -

    const COMPONENT_ID = FilesUploader__YDF.generateComponentID();

    const {

      label,
      accessibilityGuidance,
      externalLabelHTML_ID,
      guidance,

      disabled,
      readonly,

      required,
      mustDisplayAppropriateBadgeIfInputIsRequired,
      mustDisplayAppropriateBadgeIfInputIsOptional,
      mustAddInvisibleBadgeForHeightEqualizingWhenNoBadge,
      minimalFilesCount,
      maximalFilesCount,
      supportedFilesNamesExtensions,

      noButton = false,
      noDragAndDropArea = false,

      inputElementHTML_ID = `${ COMPONENT_ID }-INPUT`,
      labelElementHTML_ID = `${ COMPONENT_ID }-LABEL`,

      theme,
      areThemesCSS_ClassesCommon ,
      geometricVariation,
      decorativeVariation

    } = processObjectTypeParameterOfPugMixin({
      rawParameter: properties,
      parameterNumber: 1,
      parameterName: "properties",
      parameterPropertiesSpecification: FilesUploader__YDF.propertiesSpecification,
      mixinName: FilesUploader__YDF.CSS_NAMESPACE
    });

    const {
      uploadingStatuses,
      singleImagePreview,
      imagesPreviewFlow,
      invalidInputHighlightingIfAnyValidationErrorsMessages,
      validValueHighlightingIfNoValidationErrorsMessages,
      validationErrorsMessages,
      asynchronousValidationsStatuses
    } = processObjectTypeParameterOfPugMixin({
      rawParameter: statesSimulations,
      parameterNumber: 2,
      parameterName: "statesSimulations",
      parameterPropertiesSpecification: FilesUploader__YDF.statesSimulationsSpecification,
      mixinName: FilesUploader__YDF.CSS_NAMESPACE
    });

    const rootElementModifierCSS_Classes = [

      ...disabled ? [ `${ FilesUploader__YDF.CSS_NAMESPACE }__DisabledState` ] : [],

      ...invalidInputHighlightingIfAnyValidationErrorsMessages && validationErrorsMessages.length > 0 ?
          [ `${ FilesUploader__YDF.CSS_NAMESPACE }__InvalidValueState` ] : [],
      ...validValueHighlightingIfNoValidationErrorsMessages && validationErrorsMessages.length === 0 ?
          [ `${ FilesUploader__YDF.CSS_NAMESPACE }__ValueState` ] : [],

      ...ComponentsAuxiliaries.addThemeCSS_ClassToArrayIfMust({
        theme,
        allThemes: FilesUploader__YDF.Themes,
        CSS_Namespace: FilesUploader__YDF.CSS_NAMESPACE,
        areThemesCSS_ClassesCommon
      }),

      ...ComponentsAuxiliaries.addGeometricVariationCSS_ClassToArrayIfMust({
        geometricVariation,
        allGeometricVariations: FilesUploader__YDF.GeometricVariations,
        CSS_Namespace: FilesUploader__YDF.CSS_NAMESPACE
      }),

      ...ComponentsAuxiliaries.addDecorativeVariationCSS_ClassToArrayIfMust({
        decorativeVariation,
        allDecorativeVariations: FilesUploader__YDF.DecorativeVariations,
        CSS_Namespace: FilesUploader__YDF.CSS_NAMESPACE
      })

    ];

    const supportedFilesNamesExtensionsWihtoutLeadingDots = supportedFilesNamesExtensions.map(
      fileNameExtension => removeSpecificCharacterFromCertainPosition({
        targetString: fileNameExtension,
        targetCharacter: ".",
        fromFirstPosition: true
      })
    )

    const acceptAttributeValueForInputTag = supportedFilesNamesExtensionsWihtoutLeadingDots.length > 0 ?
        `.${ supportedFilesNamesExtensionsWihtoutLeadingDots.join(", .") }` : "*";


  +CompoundControlShell--YDF(
    {

      label,
      guidance,

      required,
      mustDisplayAppropriateBadgeIfInputIsRequired,
      mustDisplayAppropriateBadgeIfInputIsOptional,
      mustAddInvisibleBadgeForHeightEqualizingWhenNoBadge,

      coreElementHTML_ID: inputElementHTML_ID,
      labelElementHTML_ID,

      theme: FilesUploader__YDF.selfAndChildrenComponentsThemesCorrespondence.compoundControlShell[theme],
      areThemesCSS_ClassesCommon,
      geometricVariation: FilesUploader__YDF.selfAndChildrenComponentsGeometricVariationsCorrespondence.compoundControlShell[geometricVariation],
      decorativeVariation: FilesUploader__YDF.selfAndChildrenComponentsDecorativeVariationsCorrespondence.compoundControlShell[decorativeVariation]

    },
    {
      invalidInputHighlightingIfAnyValidationErrorsMessages,
      validValueHighlightingIfNoValidationErrorsMessages,
      validationErrorsMessages,
      asynchronousValidationsStatuses
    }
  ).FilesUploader--YDF&attributes(attributes)(class=rootElementModifierCSS_Classes)

    //- TODO < ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    if uploadingStatuses

      table.FilesUploader--YDF-StatusTable
        tbody
          tr.FilesUploader--YDF-StatusTable-Row.FilesUploader--YDF-StatusTable-Row__InProgressState
            td: +QuestionMark__Circled__Filled--YDF_Icon.FilesUploader--YDF-StatusTable-Icon
            td.FilesUploader--YDF-StatusTable-FileNameCell File1.png
            td.FilesUploader--YDF-StatusTable-TextingCell Reading file ...

          tr.FilesUploader--YDF-StatusTable-Row.FilesUploader--YDF-StatusTable-Row__InProgressState
            td: +QuestionMark__Circled__Filled--YDF_Icon.FilesUploader--YDF-StatusTable-Icon
            td.FilesUploader--YDF-StatusTable-FileNameCell File2.png
            td.FilesUploader--YDF-StatusTable-TextingCell Uploading file ...

          tr.FilesUploader--YDF-StatusTable-Row.FilesUploader--YDF-StatusTable-Row__FailedState
            td: +MultiplicationSign--YDF_Icon.FilesUploader--YDF-StatusTable-Icon
            td.FilesUploader--YDF-StatusTable-FileNameCell File3.png
            td.FilesUploader--YDF-StatusTable-TextingCell File reading failure

          tr.FilesUploader--YDF-StatusTable-Row.FilesUploader--YDF-StatusTable-Row__SucceededState
            td: +Checkmark__Circled__Filled--YDF_Icon.FilesUploader--YDF-StatusTable-Icon
            td.FilesUploader--YDF-StatusTable-FileNameCell File3.png
            td.FilesUploader--YDF-StatusTable-TextingCell File is ready for uploading

          tr.FilesUploader--YDF-StatusTable-Row.FilesUploader--YDF-StatusTable-Row__SucceededState
            td: +Checkmark__Circled__Filled--YDF_Icon.FilesUploader--YDF-StatusTable-Icon
            td.FilesUploader--YDF-StatusTable-FileNameCell File4.png
            td.FilesUploader--YDF-StatusTable-TextingCell File has been uploaded successfully


    if !noButton

      +Button--YDF({
        theme: FilesUploader__YDF.selfAndChildrenComponentsThemesCorrespondence.button[theme],
        geometricVariation: FilesUploader__YDF.selfAndChildrenComponentsGeometricVariationsCorrespondence.button[geometricVariation],
        decorativeVariation: FilesUploader__YDF.selfAndChildrenComponentsDecorativeVariationsCorrespondence.button[decorativeVariation],
      }).FilesUploader--YDF-FilePickingButton
        +FileAdding--YDF_Icon.Button--YDF-SVG_Icon
        span.Button--YDF-Label= FilesUploader__YDF.localization.buttons.filePicking.label


    if !noDragAndDropArea

      .FilesUploader--YDF-DragAndDropArea(
        tabindex="0"
      )
        +FileAdding--YDF_Icon.FilesUploader--YDF-Icon
        p.FilesUploader--YDF-Guidance=FilesUploader__YDF.localization.uploadSingleFileByDragAndDropGuidance


    if singleImagePreview

      .FilesUploader--YDF-SingleImagePreviewer

        img.FilesUploader--YDF-SingleImagePreview(
          src=isString(singleImagePreview) ? singleImagePreview: DummyImagesURIs.highAndNarrow
          alt="The preview of image which will be uploaded"
        )

      +Button--YDF.FilesUploader--YDF-FileDeletingButton
        +TrashCan__Filled--YDF_Icon.Button--YDF-SVG_Icon
        span.Button--YDF-Label=FilesUploader__YDF.localization.buttons.fileDeleting.label


    if imagesPreviewFlow

      ul.FilesUploader--YDF-ImagesPreviewFlow(
        aria-label="Images preview"
      )

        each imageURI in Array.from(Object.values(DummyImagesURIs)).concat(Array.from(Object.values(DummyImagesURIs)))

          li.FilesUploader--YDF-PreviewCard

            .FilesUploader--YDF-PreviewCard-SizingAndDefaultBackgroundProvidingWrapper
              img.FilesUploader--YDF-PreviewCard-Image(
                src=imageURI
                alt="Image preview"
              )

            +Button--YDF({ label: "削除" }).FilesUploader--YDF-PreviewCard-Button


    //- TODO accept=acceptAttributeValueForInputTag
    input.FilesUploader--YDF-HiddenInputElement(
      type="file"
      multiple= maximalFilesCount !== 1
      required=required
      aria-label=accessibilityGuidance
      aria-labelledby=externalLabelHTML_ID
      id=inputElementHTML_ID
    )
