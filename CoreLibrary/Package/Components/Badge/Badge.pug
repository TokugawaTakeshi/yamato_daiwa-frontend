include Badge.class.pug


mixin Badge--YDF(properties)

  -

    const {

      key,
      value,

      theme,
      areThemesCSS_ClassesCommon,
      geometricVariation,
      geometricModifiers,
      decorativeVariation,
      decorativeModifiers,

      rootElementTag = "span"

    } = processObjectTypeParameterOfPugMixin({
      rawParameter: properties,
      parameterNumber: 1,
      parameterName: "properties",
      parameterPropertiesSpecification: Badge__YDF.propertiesSpecification,
      mixinName: Badge__YDF.CSS_NAMESPACE
    })

    const rootElementModifierCSS_Classes = [

      ...ComponentsAuxiliaries.addThemeCSS_ClassToArrayIfMust({
        theme,
        allThemes: Badge__YDF.Themes,
        CSS_Namespace: Badge__YDF.CSS_NAMESPACE,
        areThemesCSS_ClassesCommon
      }),

      ...ComponentsAuxiliaries.addGeometricVariationCSS_ClassToArrayIfMust({
        geometricVariation,
        allGeometricVariations: Badge__YDF.GeometricVariations,
        CSS_Namespace: Badge__YDF.CSS_NAMESPACE
      }),

      ...ComponentsAuxiliaries.generateDemandedGeometricModifiersCSS_Classes(Badge__YDF.CSS_NAMESPACE, geometricModifiers),

      ...ComponentsAuxiliaries.addDecorativeVariationCSS_ClassToArrayIfMust({
        decorativeVariation,
        allDecorativeVariations: Badge__YDF.DecorativeVariations,
        CSS_Namespace: Badge__YDF.CSS_NAMESPACE
      }),

      ...ComponentsAuxiliaries.generateDemandedDecorativeModifiersCSS_Classes(Badge__YDF.CSS_NAMESPACE, decorativeModifiers)

    ];


  #{ rootElementTag }.Badge--YDF&attributes(attributes)(class=rootElementModifierCSS_Classes)

    if block

      block


    if key

      span.Badge--YDF-Key= key

    span.Badge--YDF-Value= value


mixin Badge--YDF-LoadingPlaceholder(properties)

  -

    const {
      theme,
      areThemesCSS_ClassesCommon,
      geometricVariation,
      geometricModifiers
    } = processObjectTypeParameterOfPugMixin({
      rawParameter: properties,
      parameterNumber: 1,
      parameterName: "properties",
      parameterPropertiesSpecification: {
        theme: Badge__YDF.propertiesSpecification.theme,
        areThemesCSS_ClassesCommon: Badge__YDF.propertiesSpecification.areThemesCSS_ClassesCommon,
        geometricVariation: Badge__YDF.propertiesSpecification.geometricVariation,
        geometricModifiers: Badge__YDF.propertiesSpecification.geometricModifiers
      },
      mixinName: `${ Badge__YDF.CSS_NAMESPACE }-LoadingPlaceholder`
    })

    const rootElementModifierCSS_Classes = [

      ...ComponentsAuxiliaries.addThemeCSS_ClassToArrayIfMust({
        theme,
        allThemes: Badge__YDF.Themes,
        CSS_Namespace: Badge__YDF.CSS_NAMESPACE,
        areThemesCSS_ClassesCommon
      }),

      ...ComponentsAuxiliaries.addGeometricVariationCSS_ClassToArrayIfMust({
        geometricVariation,
        allGeometricVariations: Badge__YDF.GeometricVariations,
        CSS_Namespace: Badge__YDF.CSS_NAMESPACE
      }),

      ...ComponentsAuxiliaries.generateDemandedGeometricModifiersCSS_Classes(Badge__YDF.CSS_NAMESPACE, geometricModifiers),

    ];


  span.Badge--YDF.Badge--YDF__LoadingPlaceholder(
    class=rootElementModifierCSS_Classes
  )&attributes(attributes)
