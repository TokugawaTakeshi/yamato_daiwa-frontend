-

  class AdmonitionBlock__YDF {

    /**
     * @type { string }
     * @public
     * @readonly
     */
    static CSS_NAMESPACE = "AdmonitionBlock--YDF";


    /* ━━━ Theming ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */

    /**
     * @type { { [themeName: string]: string } }
     * @public
     * @description If you want to define new themes, do it only via `defineThemes` static method.
     */
    static Themes = { regular: "REGULAR" };

    /**
     * @param { Array<string> } themesNames
     * @return { typeof AdmonitionBlock__YDF }
     * @public
     */
    static defineThemes(themesNames) {
      return ComponentsAuxiliaries.defineThemes(themesNames, AdmonitionBlock__YDF);
    }

    /**
     * @type { boolean } [ areThemesCSS_ClassesCommon = ComponentsAuxiliaries.areComponentsThemesCommon ]
     * @private
     * */
    static areThemesCSS_ClassesCommon = ComponentsAuxiliaries.areComponentsThemesCommon;

    /**
     * @returns { typeof AdmonitionBlock__YDF }
     * @public
     * */
    static considerThemesAsCommon() {
      AdmonitionBlock__YDF.areThemesCSS_ClassesCommon = true;
      return AdmonitionBlock__YDF;
    }


    /* ─── Geometry ───────────────────────────────────────────────────────────────────────────────────────────────── */

    /**
     * @type { { [geometricVariationName: string]: string } }
     * @public
     * @description If you want to define new geometric variations, do it only via `defineGeometricVariations` static method.
     */
    static GeometricVariations = {
      regular: "REGULAR",
      stickyNoteLike: "STICKY_NOTE_LIKE"
    };

    /**
     * @param { Array<string> } geometricVariationsNames
     * @return { typeof AdmonitionBlock__YDF }
     */
    static defineGeometricVariations(geometricVariationsNames) {
      return ComponentsAuxiliaries.defineGeometricVariations(geometricVariationsNames, AdmonitionBlock__YDF);
    }


    /* ─── Decoration ─────────────────────────────────────────────────────────────────────────────────────────────── */

    /**
     * @type { { [decorativeVariationsName: string]: string } }
     * @public
     * @description If you want to define new decorative variations, do it only via `defineDecorativeVariations` static method.
     */
    static DecorativeVariations = {
      notice: "NOTICE",
      error: "ERROR",
      warning: "WARNING",
      success: "SUCCESS",
      guidance: "GUIDANCE",
      question: "QUESTION"
    };

    /**
     * @param { Array<string> } decorativeVariationsNames
     * @return { typeof AdmonitionBlock__YDF }
     */
    static defineDecorativeVariations(decorativeVariationsNames) {
      return ComponentsAuxiliaries.defineDecorativeVariations(decorativeVariationsNames, AdmonitionBlock__YDF);
    }


    /* ━━━ Properties Specification ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */

    /**
     * @type { RawObjectDataProcessor.PropertiesSpecification }
     * @public
     * @readonly
     * */
    static propertiesSpecification = {

      title: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      SVG_Icon: {

        type: RawObjectDataProcessor.ValuesTypesIDs.oneOf,
        required: false,

        alternatives: [
          { type: Boolean },
          {

            type: Object,
            required: false,

            properties: {

              innerElementID: {
                type: String,
                required: true,
                minimalCharactersCount: 1
              },

              SVG_ElementAttributes: {
                type: RawObjectDataProcessor.ValuesTypesIDs.associativeArrayOfUniformTypeValues,
                defaultValue: {},
                value: {
                  type: String,
                  minimalCharactersCount: 1
                }
              }

            }

          }
        ]

      },

      dismissible: {
        type: Boolean,
        defaultValue: false
      },

      theme: {
        type: String,
        defaultValue: AdmonitionBlock__YDF.Themes.regular,
        allowedAlternatives: Object.
            entries(AdmonitionBlock__YDF.Themes).
            map(([ key, value ]) => ({ key: `AdmonitionBlock__YDF.Themes.${ key }`, value }))
      },

      areThemesCSS_ClassesCommon: {
        type: Boolean,
        defaultValue: AdmonitionBlock__YDF.areThemesCSS_ClassesCommon
      },

      geometricVariation: {
        type: String,
        defaultValue: AdmonitionBlock__YDF.GeometricVariations.regular,
        allowedAlternatives: Object.
            entries(AdmonitionBlock__YDF.GeometricVariations).
            map(([ key, value ]) => ({ key: `AdmonitionBlock__YDF.GeometricVariations.${ key }`, value }))
      },

      decorativeVariation: {
        type: String,
        required: true,
        allowedAlternatives: Object.
            entries(AdmonitionBlock__YDF.DecorativeVariations).
            map(([ key, value ]) => ({ key: `AdmonitionBlock__YDF.DecorativeVariations.${ key }`, value }))
      }

    };


    /* ━━━ Localization ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    /**
     * @type { AdmonitionBlockLocalization }
     * @public
     * @static
     * */
    static localization = admonitionBlockYDF_ComponentLocalization__english;


    /* ━━━ ID Generating ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    /**
     * @type { number } Integers Only
     * @private
     * @static
     * */
    static counterForInstancesIDs_Generating = 0;

    /**
     * @returns { string } Generated ID
     * @public
     * @static
     * */
    static generateInstanceID() {
      AdmonitionBlock__YDF.counterForInstancesIDs_Generating++;
      return `ADMONITION_BLOCK--YDF-${ AdmonitionBlock__YDF.counterForInstancesIDs_Generating }`;
    }


    /* ─── SVG Icons ──────────────────────────────────────────────────────────────────────────────────────────────── */
    /**
     * @type { number } Integers Only
     * @private
     * @static
     * */
    static counterForCustomSVG_IconsIDs_Generating = 0;

    /**
     * @type { string | null } Integers Only
     * @private
     * @static
     * */
    static customSVG_IconCurrentID = null;

    /**
     * @returns { string } Generated ID
     * @public
     * @static
     * */
    static generateCustomIconNewID() {

      AdmonitionBlock__YDF.counterForCustomSVG_IconsIDs_Generating++;
      AdmonitionBlock__YDF.customSVG_IconCurrentID =
            `ADMONITION_BLOCK--YDF-SVG_ICON-${ this.counterForCustomSVG_IconsIDs_Generating }`;

      return AdmonitionBlock__YDF.customSVG_IconCurrentID;

    }

  }
