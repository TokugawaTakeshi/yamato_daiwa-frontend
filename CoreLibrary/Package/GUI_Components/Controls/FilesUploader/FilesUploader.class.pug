-

  class FilesUploader__YDF {

    static CSS_NAMESPACE = "FilesUploader--YDF";

    static fileNamesExtensionsWithoutDotsOfFilesRecognizedAsImages = [
      "jpg", "png", "webp", "gif", "png"
    ];


    /* ━━━ Theming ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    static Themes = { regular: "REGULAR" };

    /* [ Pitfall ] The classes of other components may not be declared yet, initialization on demand required. */
    /** @type { { [ childComponentName: string ]: { [ownThemeValue: string]: string } } | null } */
    static _selfAndChildrenComponentsThemesCorrespondence = null;

    /** @type { { [ childComponentName: string ]: { [ownThemeValue: string]: string } } } */
    static get selfAndChildrenComponentsThemesCorrespondence() {
      return FilesUploader__YDF._selfAndChildrenComponentsThemesCorrespondence ?? (
        FilesUploader__YDF._selfAndChildrenComponentsThemesCorrespondence = {
          compoundControlShell: { [FilesUploader__YDF.Themes.regular]: CompoundControlShell__YDF.Themes.regular },
          button: { [FilesUploader__YDF.Themes.regular]: Button__YDF.Themes.regular }
        }
      );
    }

    /**
     * @param {
     *   { [ ownThemeKey: string ]: { [ childrenComponentKey: string ]: string; } }
     * } ownAndCorrespondingCompoundControlShellThemesDefinition
     * @example
     * FilesUploader__YDF.defineThemes({
     *   redmond: {
     *     compoundControlShell: CompoundControlShell__YDF.Themes.redmond,
     *     button: Button__YDF.Themes.redmond
     *   },
     *   cupertino: {
     *     compoundControlShell: CompoundControlShell__YDF.Themes.cupertino,
     *     button: Button__YDF.Themes.cupertino
     *   }
     * });
     */
    static defineThemes(ownAndCorrespondingCompoundControlShellThemesDefinition) {
      return ComponentsAuxiliaries.defineThemesAndSetCorrespondenceWithOnesOfChildrenComponents(
        ownAndCorrespondingCompoundControlShellThemesDefinition, FilesUploader__YDF
      );
    }

    static areThemesCSS_ClassesCommon = ComponentsAuxiliaries.areComponentsThemesCommon;

    static considerThemesAsCommon() {
      FilesUploader__YDF.areThemesCSS_ClassesCommon = true;
      return FilesUploader__YDF;
    }


    /* ─── Geometry ───────────────────────────────────────────────────────────────────────────────────────────────── */
    static GeometricVariations = {
      regular: "REGULAR",
      small: "SMALL"
    };

    /* [ Pitfall ] The classes of other components may not be declared yet, initialization on demand required. */
    /** @type { { [ childComponentName: string ]: { [ownGeometricVariationValue: string]: string } } | null } */
    static _selfAndChildrenComponentsGeometricVariationsCorrespondence = null;

    /** @type { { [ childComponentName: string ]: { [ownGeometricVariationValue: string]: string } } } */
    static get selfAndChildrenComponentsGeometricVariationsCorrespondence() {
      return FilesUploader__YDF._selfAndChildrenComponentsGeometricVariationsCorrespondence ?? (
        FilesUploader__YDF._selfAndChildrenComponentsGeometricVariationsCorrespondence = {
          compoundControlShell: {
            [FilesUploader__YDF.GeometricVariations.regular]: CompoundControlShell__YDF.GeometricVariations.regular,
            [FilesUploader__YDF.GeometricVariations.small]: CompoundControlShell__YDF.GeometricVariations.small
          },
          button: {
            [FilesUploader__YDF.GeometricVariations.regular]: Button__YDF.GeometricVariations.regular,
            [FilesUploader__YDF.GeometricVariations.small]: Button__YDF.GeometricVariations.small
          }
        }
      );
    }

    static defineGeometricVariations(ownAndCorrespondingCompoundControlShellGeometricVariationsDefinition) {
      return ComponentsAuxiliaries.defineGeometricVariationsAndSetCorrespondenceWithOnesOfChildrenComponents(
        ownAndCorrespondingCompoundControlShellGeometricVariationsDefinition, FilesUploader__YDF
      );
    }


    /* ─── Decoration ─────────────────────────────────────────────────────────────────────────────────────────────── */
    static DecorativeVariations = { regular: "REGULAR" };

    /* [ Pitfall ] The classes of other components may not be declared yet, initialization on demand required. */
    /** @type { { [ childComponentName: string ]: { [ownDecorativeVariationValue: string]: string } } | null } */
    static _selfAndChildrenComponentsDecorativeVariationsCorrespondence = null;

    /** @type { { [ childComponentName: string ]: { [ownDecorativeVariationValue: string]: string } } } */
    static get selfAndChildrenComponentsDecorativeVariationsCorrespondence() {
      return FilesUploader__YDF._selfAndChildrenComponentsDecorativeVariationsCorrespondence ?? (
        FilesUploader__YDF._selfAndChildrenComponentsDecorativeVariationsCorrespondence = {
          compoundControlShell: {
            [FilesUploader__YDF.DecorativeVariations.regular]: CompoundControlShell__YDF.DecorativeVariations.regular
          },
          button: {
            [FilesUploader__YDF.DecorativeVariations.regular]: CompoundControlShell__YDF.DecorativeVariations.regular
          }
        }
      );
    }

    static defineDecorativeVariations(ownAndCorrespondingCompoundControlShellDecorativeVariationsDefinition) {
      return ComponentsAuxiliaries.defineDecorativeVariationsAndSetCorrespondenceWithOnesOfChildrenComponents(
        ownAndCorrespondingCompoundControlShellDecorativeVariationsDefinition, FilesUploader__YDF
      );
    }


    /* ━━━ Properties specification ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    static propertiesSpecification = {

      label: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      accessibilityGuidance: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      externalLabelHTML_ID: {
        type: String,
        requiredIf: {
          predicate: properties => !isNonEmptyString(properties.label) && !isNonEmptyString(properties.accessibilityGuidance),
          descriptionForLogging: "Neither \"label\" nor \"accessibilityGuidance\" has been specified with non-empty strings"
        },
        minimalCharactersCount: 1
      },

      guidance: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      value: {
        type: RawObjectDataProcessor.ValuesTypesIDs.oneOf,
        defaultValue: null,
        alternatives: [
          {
            type: String,
            minimalCharactersCount: 1,
            nullable: true
          },
          {
            type: Array,
            element: {
              type: String,
              minimalCharactersCount: 1
            }
          }
        ]
      },

      disabled: {
        type: Boolean,
        defaultValue: false
      },

      readonly: {
        type: Boolean,
        defaultValue: false
      },

      required: {
        type: Boolean,
        defaultValue: false
      },

      mustDisplayAppropriateBadgeIfInputIsRequired: {
        type: Boolean,
        defaultValue: false
      },

      mustDisplayAppropriateBadgeIfInputIsOptional: {
        type: Boolean,
        defaultValue: false
      },

      mustAddInvisibleBadgeForHeightEqualizingWhenNoBadge: {
        type: Boolean,
        defaultValue: false
      },

      minimalFilesCount: {
        type: Number,
        numbersSet: RawObjectDataProcessor.NumbersSets.nonNegativeInteger,
        defaultValue: 1
      },

      maximalFilesCount: {
        type: Number,
        numbersSet: RawObjectDataProcessor.NumbersSets.nonNegativeInteger,
        required: false,
        customValidators: {
          validationFunction: ({ currentPropertyValue: maximalFilesCount, rawData__currentObjectDepth }) =>
              isUndefined(rawData__currentObjectDepth.minimalFilesCount) ||
              (
                Number.isInteger(rawData__currentObjectDepth.minimalFilesCount) &&
                maximalFilesCount >= rawData__currentObjectDepth.minimalFilesCount
              ),
          descriptionForLogging: "\"maximalFilesCount\" could not be less than \"minimalFilesCount\""
        }
      },

      supportedFilesNamesExtensions__leadingDotsAreOptional: {
        type: Array,
        defaultValue: [],
        element: {
          type: String,
          minimalCharactersCount: 1
        }
      },

      noFilePickingButton: {
        type: Boolean,
        defaultValue: false
      },

      noDragAndDropArea: {
        type: Boolean,
        defaultValue: false,
        customValidators: {
          validationFunction: ({ currentPropertyValue: noDragAndDropArea, rawData__currentObjectDepth }) =>
              noDragAndDropArea === false ||
                  (noDragAndDropArea === true && rawData__currentObjectDepth.noFilePickingButton !== true),
          descriptionForLogging:
              "\"noDragAndDropArea\" could not have \"true\" value if \"noFilePickingButton\" is \"true\" because " +
                "at least one uploading method must be available."
        }
      },

      noDragAndDropAreaOnTouchScreens: {
        type: Boolean,
        defaultValue: false
      },

      inputElementHTML_ID: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      labelElementHTML_ID: {
        type: String,
        required: false,
        minimalCharactersCount: 1
      },

      theme: {
        type: String,
        defaultValue: FilesUploader__YDF.Themes.regular,
        allowedAlternatives: Object.
            entries(FilesUploader__YDF.Themes).
            map(([ key, value ]) => ({ key: `FilesUploader__YDF.Themes.${ key }`, value }))
      },

      areThemesCSS_ClassesCommon: {
        type: Boolean,
        defaultValue: FilesUploader__YDF.areThemesCSS_ClassesCommon
      },

      geometricVariation: {
        type: String,
        defaultValue: FilesUploader__YDF.GeometricVariations.regular,
        allowedAlternatives: Object.
            entries(FilesUploader__YDF.GeometricVariations).
            map(([ key, value ]) => ({ key: `FilesUploader__YDF.GeometricVariations.${ key }`, value }))
      },

      decorativeVariation: {
        type: String,
        defaultValue: FilesUploader__YDF.DecorativeVariations.regular,
        allowedAlternatives: Object.
            entries(FilesUploader__YDF.DecorativeVariations).
            map(([ key, value ]) => ({ key: `FilesUploader__YDF.DecorativeVariations.${ key }`, value }))
      }

    }


    /* ━━━ State simulations specification ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    static statesSimulationsSpecification = {

      filesProcessingStatuses: {
        type: Boolean,
        defaultValue: false
      },

      singleImagePreview: {
        type: RawObjectDataProcessor.ValuesTypesIDs.oneOf,
        defaultValue: false,
        alternatives: [
          {
            type: Boolean,
            trueOnly: true
          },
          {
            type: String,
            minimalCharactersCount: 1
          }
        ]
      },

      multipleImagesPreview: {
        type: Boolean,
        defaultValue: false
      },

      dragOver: {
        type: Boolean,
        required: false
      },

      busy: {
        type: Boolean,
        required: false
      },

      invalidInputHighlightingIfAnyValidationErrorsMessages: ComponentsAuxiliaries.
          validatableControlGeneralStatesSimulationsSpecification.invalidInputHighlightingIfAnyValidationErrorsMessages,

      validValueHighlightingIfNoValidationErrorsMessages: ComponentsAuxiliaries.
          validatableControlGeneralStatesSimulationsSpecification.validValueHighlightingIfNoValidationErrorsMessages,

      validationErrorsMessages: ComponentsAuxiliaries.validatableControlGeneralStatesSimulationsSpecification.
          validationErrorsMessages,

      asynchronousValidationsStatuses: ComponentsAuxiliaries.validatableControlGeneralStatesSimulationsSpecification.
          asynchronousValidationsStatuses

    }


    /* ━━━ Localization ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    static localization = filesUploaderYDF_ComponentLocalization__english;


    /* ━━━ Routines ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ */
    /* ─── ID generating ──────────────────────────────────────────────────────────────────────────────────────────── */
    static counterForID_Generating = 0;

    static generateComponentID() {
      FilesUploader__YDF.counterForID_Generating++;
      return `FILES_UPLOADER--YDF-${ FilesUploader__YDF.counterForID_Generating }`;
    }

  };
