LinkDefaultProperties--YDF = {

  geometry: {
    fontFamily: null,
    fontSize: null,
    underlineThickness: 1px,
    verticalSpaceBetweenUnderlineAndLetters: 2px,
  },

  decoration: {

    underlineStyle: solid,
    fontWeight: null,

    coloration: {
      defaultState: {
        font: JQueryUI_BaseTheme.clickableElements.activeState.borderColor,
        underline: rgba(JQueryUI_BaseTheme.clickableElements.activeState.borderColor, 0.5),
        boxShadow: null,
        outline: null,
        customDeclarations: {}
      },
      hoverState: {
        font: JQueryUI_BaseTheme.clickableElements.activeState.background,
        underline: rgba(JQueryUI_BaseTheme.clickableElements.activeState.background, 0.75),
        boxShadow: null,
        outline: null,
        customDeclarations: {}
      },
      activeState: {
        font: JQueryUI_BaseTheme.warning.fontColor,
        underline: JQueryUI_BaseTheme.warning.fontColor,
        boxShadow: null,
        outline: null,
        customDeclarations: {}
      },
      tabbedState: {
        font: JQueryUI_BaseTheme.clickableElements.activeState.background,
        underline: rgba(JQueryUI_BaseTheme.clickableElements.activeState.background, 0.75),
        boxShadow: null,
        outline: none,
        customDeclarations: {}
      },
      disabledState: {
        CSS_Class: "Link__DisabledState",
        font: JQueryUI_BaseTheme.clickableElements.activeState.background,
        underline: rgba(JQueryUI_BaseTheme.clickableElements.activeState.background, 0.5),
        boxShadow: null,
        outline: null,
        customDeclarations: {}
      }
    }
  },

  customDeclarations: {}
}


Link--YDF(preset = LinkDefaultProperties--YDF, overridings = {})

  properties = deeplyCloneAndOverrideObject(preset, overridings)


  applyIfNotNull({
    font-family: properties.geometry.fontFamily,
    font-size: properties.geometry.fontSize
  })
  line-height 1


  // { --- Underline supporting line break
  applyIfNotZero({ padding-bottom: properties.geometry.verticalSpaceBetweenUnderlineAndLetters })
  background-position bottom 0 center
  background-size: 100% properties.geometry.underlineThickness
  background-repeat no-repeat
  // --- }


  color: properties.decoration.coloration.defaultState.font
  background-image: linear-gradient(
    properties.decoration.coloration.defaultState.underline,
    properties.decoration.coloration.defaultState.underline
  )

  applyIfNotNull({
    box-shadow: properties.decoration.coloration.defaultState.boxShadow,
    outline: properties.decoration.coloration.defaultState.outline
  })

  cursor pointer

  applyIfNotNull(properties.decoration.coloration.defaultState.customDeclarations)


  &:hover

    color: properties.decoration.coloration.hoverState.font
    background-image: linear-gradient(
      properties.decoration.coloration.hoverState.underline,
      properties.decoration.coloration.hoverState.underline
    )

    applyIfNotNull({
      box-shadow: properties.decoration.coloration.hoverState.boxShadow,
      outline: properties.decoration.coloration.hoverState.outline
    })

    applyIfNotNull(properties.decoration.coloration.hoverState.customDeclarations)


  &:focus

    color: properties.decoration.coloration.tabbedState.font
    background-image: linear-gradient(
      properties.decoration.coloration.tabbedState.underline,
      properties.decoration.coloration.tabbedState.underline
    )

    applyIfNotNull({
      box-shadow: properties.decoration.coloration.tabbedState.boxShadow,
      outline: properties.decoration.coloration.tabbedState.outline
    })

    applyIfNotNull(properties.decoration.coloration.tabbedState.customDeclarations)


  &:active

    color: properties.decoration.coloration.activeState.font
    background-image: linear-gradient(
      properties.decoration.coloration.activeState.underline,
      properties.decoration.coloration.activeState.underline
    )

    applyIfNotNull({
      box-shadow: properties.decoration.coloration.activeState.boxShadow,
      outline: properties.decoration.coloration.activeState.outline
    })

    applyIfNotNull(properties.decoration.coloration.activeState.customDeclarations)


  &.{properties.decoration.coloration.disabledState.CSS_Class}

    color: properties.decoration.coloration.disabledState.font
    background-image: linear-gradient(
      properties.decoration.coloration.disabledState.underline,
      properties.decoration.coloration.disabledState.underline
    )

    applyIfNotNull({
      box-shadow: properties.decoration.coloration.disabledState.boxShadow,
      outline: properties.decoration.coloration.disabledState.outline
    })

    applyIfNotNull(properties.decoration.coloration.disabledState.customDeclarations)


// TODO InlineQuote
