mixin ComponentMarkupProvidingGuidanceFragment(properties)

  -
    const {
      componentName,
      pugMixinName = `${ componentName }--YDF`
    } = properties

  p.Article-Paragraph
    | Разметка данного #[+Term--YDID компонента] поставляется в виде
    |   #[+Link--YDF({ unendorsedExternalURI: sharedExternalLinks.pug.homePage.mixins }).Article-Link Pug-примеси]
    |   #[+ImportantEntity__Code--YDID #{ pugMixinName }].
    | Способ подключения —
    |
    +Link--YDF({
      internalURI: localizedRouting.coreLibrary.$children.components.$sectioning.markup.$children.providing.$URI
    }).Article-Link стандартный
    |:
    |   путём
    |
    +Link--YDF({ unendorsedExternalURI: sharedExternalLinks.pug.homePage.includes }).Article-Link включения Pug-файла
    |   #[+ImportantEntity__Code--YDID Components.pug] в Ваш #[+Term--YDID pug-файл], при этом туда же
    |   #[+Keyword--YDID предварительно] #[+Keyword__Contrast--YDID должен] быть включён #[+Term--YDID файл]
    |   #[+ImportantEntity__Code--YDID Functionality.pug] (#[+Keyword--YDID последний] #[+Keyword__Contrast--YDID уже]
    |   входит в
    |
    +Link--YDF({
      internalURI: localizedRouting.coreLibrary.$children.markup.$children.pagesTemplates.$URI
    }).Article-Link шаблоны страниц
    |   , #[+Keyword--YDID повторное] включение #[+Keyphrase--YDID приведёт к ошибке]).

  +CodeViewer--YDF
    +CodeViewer-TabPanel--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.Pug })
      +CodeViewer-PartialListing--YDF: :html_special_characters_to_html_entities
        include ../../node_modules/@yamato-daiwa/frontend/Functionality.pug
        include ../../node_modules/@yamato-daiwa/frontend/Components.pug
      +CodeViewer-Explanation--YDF
        p.Article-Paragraph.
          В Вашем случае #[+Term--YDID относительный путь] к #[+Term__Contrast--YDID директории]
            #[+ImportantEntity--YDID node_modules] может быть другим в в зависимости от того, насколько глубже
            #[+Term--YDID корневой директории проекта] находится Ваш #[+Term--YDID Pug-файл] с этим кодом.
        p.Article-Paragraph.
          Напомним, что #[+Keyword--YDID одно] #[+Keyword__Contrast--YDID только] включение этих файлов
            #[+Keyword--YDID никакого] выходного #[+Term--YDID HTML-кода]
            #[+Keyword--YDID не]&nbsp;даст: чтобы сгенерировать #[+Term--YDID HTML-код] компонента
            #[+ImportantEntity--YDID #{ componentName }], нужно вызывать #[+Term--YDID Pug-примесь]
            #[+ImportantEntity__Code--YDID #{ pugMixinName }].
          Кроме того, #[+Keyphrase--YDID на данном этапе] пока ещё #[+Keyword--YDID не]&nbsp;подключены
            #[+Term--YDID стили], а потому при вызове этой #[+Term--YDID примеси] #[+Term__Contrast--YDID HTML-код]
            хотя и будет сгенерирован, но корректного отображения
            #[+Keyword--YDID пока]&nbsp;#[+Keyword__Contrast--YDID не]&nbsp;будет.


mixin ComponentStylesProvidingGuidanceFragment(properties)

  -
    const {
      componentName,
      stylusMixinName = `provide${ componentName }YDF_Component`
    } = properties

  p.Article-Paragraph.
    Данный #[+Term--YDID компонент] поставляется в виде
      #[+Link--YDF({ unendorsedExternalURI: sharedExternalLinks.stylus.homePage.mixins }).Article-Link Stylus-примеси]
      #[+ImportantEntity__Code--YDID #{ stylusMixinName }].
    Способ подключения -
      #[+Link--YDF({ internalURI: localizedRouting.coreLibrary.$children.components.$sectioning.providingOfStyles.$URI }).Article-Link стандартный]:
      путём #[+Link--YDF({ internalURI: sharedExternalLinks.stylus.homePage.includes }).Article-Link включения Stylus-файла]
      #[+ImportantEntity__Code--YDID Components.styl] в Ваш #[+Term--YDID Stylus-файл], при этом туда же
      #[+Keyword--YDID предварительно] должен быть включён файл #[+ImportantEntity__Code--YDID Functionality.styl].

  +CodeViewer--YDF
    +CodeViewer-TabPanel--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.Stylus })
      +CodeViewer-PartialListing--YDF: :html_special_characters_to_html_entities
        @require "../../node_modules/@yamato-daiwa/frontend/Functionality.styl"
        @require "../../node_modules/@yamato-daiwa/frontend/Components.styl"
      +CodeViewer-Explanation--YDF.
        В Вашем случае #[+Term--YDID относительный путь] к директории #[+ImportantEntity--YDID node_modules] может быть
          другим в в зависимости от того, насколько глубже корневой директории проекта находится Ваш Stylus-файл с этим кодом.
        Напомним, что одно только включение этих файлов #[+Keyword--YDID никакого] выходного #[+Term--YDID CSS-кода]
          #[+Keyword--YDID не] даст: чтобы сгенерировать #[+Term--YDID CSS-код] компонента
          #[+ImportantEntity--YDID #{ componentName }], нужно вызывать #[+Term--YDID Stylus-примесь]
          #[+ImportantEntity__Code--YDID #{ stylusMixinName }].
        Настоятельно рекомендуется предварительно вызывать #[+Term--YDID Stylus-примеси]
          #[+ImportantEntity__Code--YDID CrossBrowserStylesReset] и #[+ImportantEntity__Code--YDID InitialGlobalCSS_Rules],
          чтобы исключить влияние #[+Term--YDID стандартных стилей браузера] и унифицировать основные наследуемые стили,
          такие как размер шрифта и высота строки.


mixin IntelliJ_IDEA_IDEs_LiveTemplateUsageGuidance(properties)

  -

    const {
      imageURI,
      target,
      relatedTableOfContentsMetadata
    } = properties;

    let target__pluralForm__accusativeCase;

    switch (target) {
      case "function": {
        target__pluralForm__accusativeCase = "выражения вызова функции"
      }
    }


  //- ━━━ Быстрый ввод в интегрированных средах разработки семейства IntelliJ IDEA ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
  +Heading--YDF({
    level: 2,
    text: relatedTableOfContentsMetadata.$heading,
    HTML_ID: relatedTableOfContentsMetadata.$anchor
  }).Article-Heading2

  +SingleImageViewer--YDF({
    imageURI: imageURI,
    imageAlternateText:
        "Быстрый ввод в интегрированных средах разработки семейства IntelliJ IDEA с использованием функциональности " +
        "«Live Template»."
  })

  p.Article-Paragraph.
    Использование
      #[+Link--YDF({ unendorsedExternalURI: sharedExternalLinks.jetBrains.liveTemplates }).Article-Link Live template-ов]
      в семействе #[+Term--YDID интегрированных сред разработки]
      #[+Link--YDF({ unendorsedExternalURI: sharedExternalLinks.jetBrains.intelliJ_IDEA_FamilyIDEs }).Article-Link IntelliJ IDEA]
      позволяет вводить код такой так #[+Term--YDID #{ target__pluralForm__accusativeCase }] быстрее.
    Для получения доступа к #[+Term--YDID Live Template-ам] библиотеки #[+ImportantEntity--YDID YDF] потребуется установить
      #[+Link--YDF({ unendorsedExternalURI: sharedExternalLinks.jetBrains.YDF_Plugin }).Article-Link официальный плагин]
      этой библиотеки.


  //- ─── Пошаговое описание процесса использования шаблона ────────────────────────────────────────────────────────────
  +Heading--YDF({
    level: 3,
    text: relatedTableOfContentsMetadata.$children.steps.$heading,
    HTML_ID: relatedTableOfContentsMetadata.$children.steps.$anchor
  }).Article-Heading3

  p.Article-Paragraph.
    Если Вы ранее не пользовались #[+Term--YDID Live template-ами], то пусть Вас не пугает приведённая ниже объёмная
      инструкция: при сформированной привычке использования #[+Term--YDID Live template-ов] (эта привычка сходна с
      повседневным применением сочетаний клавиш) скорость выполнения описанных ниже операций займёт считанные секунды.

  block


include ReusableFragments/Components/AdmonitionBlock-ReusableFragments.russian.pug
include ReusableFragments/Components/Button-ReusableFragments.russian.pug
