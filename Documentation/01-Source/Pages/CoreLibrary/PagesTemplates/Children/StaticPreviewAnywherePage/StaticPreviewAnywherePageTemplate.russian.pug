extends ../../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../../SharedAssets/Markup/SharedAssets.russian.pug
  include ../../../../../SharedComponents/SharedComponents.russian.pug


block append Metadata

  -

    RegularWebPageTemplate__YDF.configure({
      metadata: {
        title: buildHTML_PageTitle("StaticPreviewAnywherePageTemplate"),
        description: ""
      },
      stylesSheetsURIs: [
        "$CommonStyles",
        "$LayoutsStyles/TwoColumns/TwoColumnsLayout.css",
        "$PreMadesStyles",
        "@CustomizedExternalComponents"
      ]
    });

    RoutingEmulator.setCurrentRoute("coreLibrary.markup.pagesTemplates.StaticPreviewAnywherePage");

    LanguageDropDownList__YDF_DK.setLinks({
      english: routing.english.coreLibrary.$children.markup.$children.pagesTemplates.$children.StaticPreviewAnywherePage.$URI,
      japanese: routing.japanese.coreLibrary.$children.markup.$children.pagesTemplates.$children.StaticPreviewAnywherePage.$URI
    });

    const {
      $sectioning: localizedSectioning,
      $heading: topHeading
    } = localizedRouting.coreLibrary.$children.markup.$children.pagesTemplates.$children.StaticPreviewAnywherePage;


block append HeadScripts

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    h1.Article-Heading1 StaticPreviewAnywherePageTemplate

    //- ━━━ Концепция статического превью ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    +Heading--YDF({
      level: 2,
      text: localizedSectioning.staticPreviewConcept.$heading,
      HTML_ID: localizedSectioning.staticPreviewConcept.$anchor
    }).Article-Heading2

    p.Article-Paragraph.
      #[+DefinableTerm--YDID Статическое превью] — #[+Keyword--YDID этап] разработки #[+Term--YDID веб-сайта] либо
        #[+Term--YDID приложения с графическим интерфейсом] (даже #[+Keyword--YDID не]&nbsp;обязательно
        #[+Term--YDID веб-приложения], если технология поддерживает создание
        #[+Term--YDID графического пользовательского интерфейса] с помощью #[+ImportantEntity--YDID HTML] и
        #[+ImportantEntity--YDID CSS]) или же их конкретной страницы, на которых разработчик #[+Keyword--YDID полностью]
        сконцентрирован на #[+Keyword--YDID вёрстке], а #[+Term--YDID JavaScript-динамика] и серверная часть — это задачи
        #[+Keyword--YDID следующих] этапов.
      #[+Keyword--YDID Также], #[+Term--YDID cтатическое превью] — #[+Keyword--YDID набор]
        #[+Keyword__Contrast--YDID выходных] файлов, являющихся результатом одноимённого этапа разработки.

    p.Article-Paragraph.
      Термин #[+Term--YDID «статическое превью»] #[+Keyword--YDID близок] к #[+Keyword__Contrast--YDID русскоязычному]
        термину #[+Term--YDID «вёрстка»] #[+Keyphrase--YDID в контексте веб-разработки], однако в
        англоязычной терминологии #[+Keyword--YDID прямого] перевода термина #[+Term--YDID «вёрстка»]
        #[+Keyword--YDID нет].
      Важным же #[+Keyword--YDID отличием] #[+Term--YDID статического превью] от #[+Term__Contrast--YDID вёрстки]
        является наличие следующих #[+Keyword--YDID требований]:

    ul.Article-UnorderedList

      // TODO Ссылка на YDA
      li.
        Обеспечение просмотра выходных файлов заказчиками или руководителями
          #[+Keyphrase--YDID без&nbsp;технических знаний и специализированного программного обеспечения], такого
          как #[+SecondaryEntity--YDID npm] или #[+SecondaryEntity--YDID Git], при этом
          изображения и другие мультимедийные файлы #[+Keyword--YDID должны] корректно отображаться в браузере.
        Проще говоря, должен соблюдаться принцип: «открыл скачанный #[+Term--YDID HTML-файл] в браузере — и всё
          корректно отображается».
        Помешать этому может, например, использование #[+Term--YDID укороченных абсолютных путей] в
          #[+Term__Contrast--YDID HTML-коде].

      li.
        Должен быть доступ к #[+Keyword--YDID любой] странице #[+Keyphrase--YDID без ограничений], такой как
          #[+Term--YDID аутентификация] и #[+Term--YDID авторизация].
        Разумеется, с целью предотвращения утечки секретной информации доступ к #[+Term--YDID статическому превью]
          должны иметь только лица, имеющие прямое отношение к проекту.


    //- ─── Проблематика ───────────────────────────────────────────────────────────────────────────────────────────────
    h3.Article-Heading3 Проблематика

    p.Article-Paragraph.
      Не все разработчики практикуют разделение разработки сайта или приложения на #[+Term--YDID вёрстку] и реализацию
        #[+Term--YDID логики] (как клиентской, так и серверной).
      В частности, в современной веб-разработке популярен поход #[+Term--YDID «CSS в JS»].
      Однако, такое параллельное написание #[+Term--YDID разметки], #[+Term--YDID стилей] и #[+Term--YDID логики] имеет
        #[+Keyword--YDID существенные] недостатки (#[+Keyphrase--YDID все приведённые ниже примеры были в реальности]):

    dl.Article-DescriptionList

      dt Проблемы с условным отображением
      dd.
        Допустим, на странице интернет-магазина нужно отобразить карточки товаров с разбиением на страницы
          #[+Term--YDID пагинации].
        Разработка клиентской части осуществляется на фреймворке #[+SecondaryEntity--YDID React], потому
          #[+Term--YDID разметка] и #[+Term--YDID логика] #[+Keyword--YDID едины], а серверную часть разрабатывает
          другая команда.
        В базу данных добавлены несколько товаров в количестве, соответствующем двум страницам пагинации, и они
          корректно отображается.
        Но как проверить, будет ли всё корректно отображаться, когда товаров нет?
        А как проверить, всё ли корректно отображается, когда у пагинации только одна страница?
        Каждый раз связываться с бэкенд-командой и просить то удалить, то добавить данных?
        А как проверить, всё ли корректно отображается, когда произошла ошибка при получении данных?
        Все эти проблемы решаемы, но отсутствие удобства отрицательно влияет на скорость работы, кроме того, легко забыть
          обратить временные изменения в коде, сделанные с целью посмотреть, как будет отображаться страница при
          том или ином раскладе.

      dt Сложность в работе со страницами с ограниченным доступом
      dd.
        Чтобы попасть на страницу «спасибо за покупку» интернет-магазиа, нужно добавить товар в корзину, оформить заказ
          и выполнить оплату (в режиме локальной разработки, разумеется, процесс оплаты будет замокан).
        При попадании на страницы «спасибо за покупку» происходит зачёт конверсии (лида), поэтому, чтобы статистика была
          правильной, при повторном посещении страницы «спасибо за покупку», связанной с одним и тем же заказом,
          организован редирект на страницу списка товаров.
        Но что будет, если Вам дадут задание внести изменения в разметку и/или стили на этой страницы?
        Только для того, чтобы эту попасть на эту страницу, Вам придётся авторизоваться и выполнить указанные выше
          действия, но это только начало.
        Одна перезагрузка страницы браузера (ручная ли, автоматическая) с целью получить обратную связь от внесённых
          изменений в разметку и/или стили — и Вас перенаправит на страницу списка товаров, а чтобы вернуться на
          страницу «спасибо за покупку», процесс выбора товарара и оформления заказа придётся повторять с самого начала,
          и так каждый раз.
        Разумеется, ридерект можно временно отключить, но тут возникает риск забыть вновь его включить после окончания
          работ, а посколько тимлиды из-за перегруженности часто не&nbsp;делают ревью кода должным образом, то
          ревью кода также не&nbsp;гарантирует отсутствие подбных ошибок.

      dt Требование наличия сервера для демонстрации промежуточного результата
      dd.
        Хотя в принципе можно сделать так, чтобы приложение работало при ручном открытии HTML-файла в браузере, в
          реальности соответствующими настройками почти никто не&nbsp;занимается (сложность зависит от используемого
          инструмента для сборки проектов).
        Возникает вопрос: как показать промежуточный результат заказчику или руководству?
        В теории, проблема просто решается развёртыванием так называемого #[+Term--YDID стэйджига] — сервера для
          тестового экземпляра сайта или приложения с ограниченным доступом.
        Однако в реальности зачастую на начальных этапах разработки проекта #[+Term--YDID стэйджинга] просто нет —
          иногда потому, что команда, отвечающая за серверную инфрастуктуру, ещё не&nbsp;приступила к работе, а иногда
          потому, что ещё не&nbsp;выделены средства для покупки сервера (#[+Term--YDID VPS] ли, физического ли, или
          может быть специализированного сервиса).
        В результате, заказчики и/или руководство вынуждены судить о степени завершённости работ исключительно по
          отчётам членов команды, которые могут оказаться далёкими от реального положения дел.

      dt Эргономические ограничения
      dd.
        Как известно, человеческий мозг несмотря на свою чрезмерную сложность концентрировать на двух и более вещах
          #[+Keyword--YDID не]&nbsp;способен.
        Таким образом, сконцентрироваться #[+Keyword--YDID одновременно] на #[+Term--YDID вёрстке] и на
          #[+Term--YDID логике] #[+Keyword--YDID невозможно].
        Если попытаться это сделать, то внимание будет #[+Keyword--YDID рассеиваться], переключаясь то на
          #[+Term--YDID вёрстку], то на #[+Term--YDID логику].


    //- ─── Решение ────────────────────────────────────────────────────────────────────────────────────────────────────
    h3.Article-Heading3 Решение

    p.Article-Paragraph.
      Разумеется, само по себе введение #[+Term--YDID вёрстки] как обязательного этапа разработки страницы сайта
        или приложения ещё #[+Keyword--YDID не]&nbsp;является решением — #[+Keyword--YDID необходимо] принять меры для
        #[+Keyword--YDID оптимизации] этого процесса, а также подобрать #[+Term--YDID инструмент сборки проектов],
        который позволит минимизировать рутины.
      #[+ImportantEntity--YDID YDF] вмести с инструментов для сборки проектов #[+ImportantEntity--YDID YDA] предлагает
        следующее решение приведённых выше проблем.

    dl.Article-DescriptionList

      //- Ссылка на YDA и Pug
      dt Проблемы с условным отображением
      dd.
        Несмотря на то, что на стадии #[+Term--YDID статического превью] у нас нет динамики, симулировать различные
          состояния мы легко можем с помощью условного рендеринга в Pug.
        Чтобы не&nbsp;делать вручную Pug-файл под каждое состояние, в YDA есть функция симуляции состояний для
          статического превью.

      dt Сложность в работе со страницами с ограниченным доступом
      dd.
        В статическом превью, заглавной страницей явлетяся не&nbsp;заглавная страница сайта или приложения, а специальная
          страница оглавления, с помощью которой можно попасть на любую страницу, вёрстка которой завершена или
          в процессе написания.
        Такая страница называется «Anywhere Page» — «Куда-угодно-страница».
        YDF предлагает шаблон такой страницы с готовыми стилями, а также набор примесей, который позволяет
          быстро сгенерировать оглавление.
        Кстати, поддерживается случай, когда у одной страницы несколько симуляций состояний.

      dt Требование наличия сервера для демонстрации промежуточного результата
      dd.
        Для того, чтобы статическое превью корректно отображалось при открытии HTML-файла, нужно чтобы пути
          ко всем стилям, изображениям, шрифтам и так далее были относительными.
        Однако, прописывать относительные пути вручную — это удар по поддерживаемости, а при использовании Pug
          и других HTML-препроцессоров иногда единого относительно пути может не быть (ссылка).
        К тому же, использование относительных путей на продакшене считается ненадёжным.
        YDA позволяет удовлетворить всем этим ограничениям (ссылка).

      dt Эргономические ограничения
      dd.
        На этапе статического превью весь фокус инженера сконцентрирован на вёрстке, благодаря этому на этапе реализации
          логики фокус будет уже только на логике.
        Хотя использовать написанную на этапе статического превью разметку в неизменном виде, скорее всего,
          не&nbsp;получится (особенно если на стадии реализации логики будет использоваться паттерн MVC либо фреймворки
          для рендеринга на клиенсткой сторононе, такие как Vue или React), стили, на написание которых уходит
          гораздо больше времени, чем на разметку, к концу этапа статического превью на 100% завершены.


    //- ─── Описание шаблона и пример ──────────────────────────────────────────────────────────────────────────────────
    h2.Article-Heading2 Описание шаблона и пример

    p.Article-Paragraph
      | #[+Term--YDID Pug-файл] #[+ImportantEntity__Code--YDID StaticPreviewAnywherePageTemplate.pug] предназначен для
      |  того, чтобы от него
      |
      +Link--YDF({
        unendorsedExternalURI: sharedExternalLinks.pug.homePage.templateInheritance
      }) наследовать
      |   #[+Keyword--YDID заглавную] страницу #[+Term--YDID статического превью], на которой будут ссылки на
      |   #[+Keyword--YDID все] #[+Keyword__Contrast--YDID внутренние] страницы разрабатываемого сайта или приложения.

    +AdmonitionBlock--YDF({
      title: "Главная страница статического превью ≠ главная страница сайта/приложения",
      SVG_Icon: true,
      geometricVariation: AdmonitionBlock__YDF.GeometricVariations.stickyNoteLike,
      decorativeVariation: AdmonitionBlock__YDF.DecorativeVariations.warning,
    })

      p.Article-Paragraph.
        Не стоит путать главную страницу статического превью и главную страницу сайта/приложения — согласно задумке,
          #[+Keyword--YDID нет]&nbsp;таких когда они могут совпадать.

      dl.Article-DescriptionList

        dt Главная страница статического превью
        dd.
          Имеет место быть #[+Keyword--YDID только] на этапе создания #[+Term--YDID статического превью], а на этапе
            реализации динамики (как клиентской части, так и серверной) её
            #[+Keyword--YDID уже]&nbsp;#[+Keyword__Contrast--YDID не] будет, но появятся и ограничения, такие как
            #[+Term--YDID аутентификация] и #[+Term--YDID авторизация], в результате чего попасть для просмотра
            некоторых страниц нужно выполнить определённые условия.

        dt Главая страница сайта/приложения
        dd.
          Имеет место быть на #[+Keyword--YDID всех] этапах разработки.
          В частности, на этапе #[+Term--YDID статического превью],
            #[+Term--YDID главная страница статического превью] имеет ссылку в том числе и на
            главную страницу сайта/приложения.

      p.Article-Paragraph.
        Если же у Вас #[+Keyword--YDID полностью] #[+Keyword__Contrast--YDID статический] сайт, и потому
          #[+Keyword--YDID любой] посетитель и итак может попасть на любую страницу
          #[+Keyphrase--YDID без ограничений], то в таком проетке нужды в #[+Term--YDID статическом превью] нет —
          #[+Term--YDID статическое превью] нужно #[+Keyword--YDID именно] для #[+Term--YDID динамических] сайтов
          и приложений.

    p.Article-Paragraph.
      Поскольку #[+Term--YDID статическое превью] #[+Keyword--YDID не]&nbsp;подлежит публикации и к нему должны иметь
         доступ #[+Keyword--YDID только] лица, которые имеют прямое отношение к #[+Keyword--YDID разработке], то
         задачи ограничения доступа к некоторым страницам (в том числе с помощью #[+Term--YDID аутентификации] и
         #[+Term--YDID авторизации] #[+Keyphrase--YDID на этом этапе] #[+Keyword--YDID не]&nbsp;стоит.
      Напротив, #[+Keyword--YDID ничего] #[+Keyword__Contrast--YDID не]&nbsp;должно мешать заказчикам и руководителям
        просмотреть #[+Keyword--YDID любую] страницу.

    p.Article-Paragraph.
      В результате #[+Term--YDID главная страница статического превью] может иметь примерно такой вид:

    //- TODO iframe

    p.Article-Paragraph.
      В принципе, Вы можете сделать оглавление #[+Keyword--YDID любой] структуры и самостоятельно определить
        #[+Term--YDID стили], но суть в использовании #[+Term--YDID Pug-шаблона]
        #[+ImportantEntity__Code--YDID StaticPreviewAnywherePageTemplate.pug] в том и заключается,
        чтобы не&nbsp;тратить время на написание #[+Term--YDID разметки] с нуля, а также #[+Term--YDID стилей].
      Таким образом, #[+ImportantEntity__Code--YDID StaticPreviewAnywherePageTemplate.pug] уже содержит в себе
        #[+Term--YDID стили], а также предлагает #[+Term--YDID Pug-примеси] для быстрого формирования оглавления:

    //- TODO Code

    p.Article-Paragraph.
      Такой код #[+Keyword--YDID не]&nbsp;учитывает #[+Term--YDID поисковую оптимизацию] и
        #[+Term--YDID доступность], однако ввиду того, что #[+Term--YDID главная станица статического превью] публикации
        #[+Keyword--YDID не]&nbsp;подлежит, #[+Term--YDID поисковая оптимизация] и #[+Term--YDID доступность]
        #[+Keyphrase--YDID для этой] страницы значения #[+Keyword--YDID не]&nbsp;имеют (если, конечно, Ваши заказчики
        не&nbsp;являются людьми с насколько ограниченными возможностями, что не&nbsp;смогут никуда перейти с заглавной
        страницы без использования скрин-ридера).

    +AdmonitionBlock--YDF({
      title: "Заглавная страница статического превью — не инструмент проект-менеджмента!",
      SVG_Icon: true,
      geometricVariation: AdmonitionBlock__YDF.GeometricVariations.stickyNoteLike,
      decorativeVariation: AdmonitionBlock__YDF.DecorativeVariations.warning,
      dismissible: true
    }).
      Указания статуса разработки каждой страницы (например, «в процессе») вызывает ассоциации с программным
        обсечением для руководства проектами, такими как #[+SecondaryEntity--YDID Trello] или
        #[+SecondaryEntity--YDID Jira].
      Однако, эта функциональность предназначена #[+Keyword--YDID лишь] для того, чтобы заказчики или руководители
        не&nbsp;приняли незавершённую страницу за завершённую с многочисленными ихъянами и недоработаками.
      Руководство проектом же #[+Keyword--YDID должно] осуществляется с помощью соответствующих инструментов.


    //- TODO ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    //- ─── Пошаговая инструкция ───────────────────────────────────────────────────────────────────────────────────────
    h2.Article-Heading2 Пошаговая инструкция

    h3.Article-Heading3 Шаг 1: Подготовка файлов

    p.Article-Paragraph.
      Поскольку #[+Term--YDID заглавная страна статического превью] #[+Keyword--YDID должна] вести другие страницы,
        то подготовьте файлы для хотя бы одной из них, пускай даже если это #[+Keyword--YDID изначально] будет
        #[+Term--YDID HTML-документ] с пустым #[+Term--YDID телом документа].

    h3.Article-Heading3 Шаг 2: Настройка инструмента сборки проектов

    p.Article-Paragraph.
      Настрйте Ваш инструмент для сборки проектов (в первую очередь, конечно же, преобразование
        #[+ImportantEntity--YDID Pug] в #[+ImportantEntity--YDID HTML]).
      В можете называть файлы, как хотите, но при этом #[+Keyphrase--YDID на этапе #[+Term--YDID статического превью]]
        первой должна открываться в браузере #[+Keyword--YDID не]&nbsp;главная страница сайта или приложения
        (обычно её называют #[+ImportantEntity--YDID index]), а #[+Term--YDID загласная страница]
        #[+Keyword--YDID статического превью].
      Например, в случае инструмента для сборки проектов #[+ImportantEntity--YDID @yamato-daiwa/automation] можно
        и нужно настроить отдельное #[+Term--YDID выборочное выполнение] (ссылка) для
        #[+Term--YDID статического превью], а #[+Term--YDID заглавную страницу статического превью] сделать
        #[+Keyword--YDID отдельной] #[+Term--YDID группой точек входа] (ссылка), которая будет обрабатываться только
        при сборке статического превью:

    //- TODO Код

    h3.Article-Heading3 Шаг 3: Создание файла главной страницы статического превью

    //- TODO Код тут же

    h3.Article-Heading3 Шаг 4: Конфигурация шаблона

    p.Article-Paragraph.
      Поскольку ... публикации не подлежит, то...
      Тем не менее, TITLE и LANGUAGE указать надо, чтобы HTML валидатор не&nbsp;жаловался:

    h3.Article-Heading3 Шаг 5: Локализация

    h3.Article-Heading3 Шаг 6: Заполнение оглавления

    h2.Article-Heading2 Pug-примеси
