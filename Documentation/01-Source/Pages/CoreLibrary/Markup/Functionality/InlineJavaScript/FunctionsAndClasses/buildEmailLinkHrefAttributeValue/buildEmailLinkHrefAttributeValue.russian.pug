extends ../../../../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../../../../SharedAssets/Markup/SharedAssets.russian.pug
  include ../../../../../../../SharedComponents/SharedComponents.russian.pug


block append Metadata

  -

    HTML_PAGE_LANGUAGE = "ru";
    HTML_PAGE_TITLE = buildHTML_PageTitle("buildEmailLinkHrefAttributeValue");
    HTML_PageMetaData = {
      description: MetaDescriptionTemplates.pugFunction({
        functionName: "buildEmailLinkHrefAttributeValue",
        whatFunctionDoes:
            "генерирует такое значение HTML-аттрибута «href» для тэга «a», что при клике на ссылку, которая получится " +
              "в итоге, откроется приложение для работы с электронной почтой и будет предложено отправить новое письмо " +
              "на адрес, указанный через первый и единственный параметр."
      }),
      author: HTML_PAGE_AUTHOR
    };

    FAVICON_URI = "@MustBeInPublicRoot/favicon";

    styleSheetsURIs = [
      "$CommonStyles",
      "$LayoutsStyles/TwoColumns/TwoColumnsLayout.css",
      "$PreMadesStyles",
      "@CustomizedExternalComponents"
    ];

    scriptsURIs.endOfBody = [ "$CommonLogic" ];

    RoutingEmulator.setCurrentRoute(
      "coreLibrary.markup.functionality.inlineJavaScript.functionsAndClasses.$children.buildEmailLinkHrefAttributeValue"
    );

    LanguageDropDownList__YDF_DK.setLinks({
      english: "./buildEmailLinkHrefAttributeValue.english.html",
      japanese: "./buildEmailLinkHrefAttributeValue.japanese.html"
    });


block append HeadScriptsLinks

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    +CallableExpressionScheme--YDF_DK({
      technicalName: "buildEmailLinkHrefAttributeValue",
      localizedDescriptiveHeading: "Сгенерировать значение аттрибута «href» для ссылки на электронный адрес",
      headingTag: "h1",
      parametersSpecification: [
        {
          genericTechnicalName: "emailAddress",
          localizedName: "Адрес электронной почты",
          type: "string",
          required: true
        }
      ],
      returnedValue: "string"
    })

    p.Article-Paragraph.
      Генерирует такое значение #[+Term--YDID HTML-аттрибута] #[+ImportantEntity__Code--YDID href] для #[+Term--YDID тэга]
        #[+ImportantEntity__Code--YDID a], что при клике на ссылку, которая получится в итоге, откроется приложение
        для работы с электронной почтой и будет предложено отправить новое письмо на адрес, указанный через
        #[+Keyphrase--YDID первый и единственный] #[+Term--YDID параметр].

    +CodeViewer--YDF
      +CodeViewer-Listing--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.Pug }).

        - const targetEmailAddress = "sample@example.com";

        a(
          href=buildEmailLinkHrefAttributeValue(targetEmailAddress)
        )= targetEmailAddress

    p.Article-Paragraph.
      Всё, что делает эта #[+Term--YDID функция] — добавляет #[+ImportantEntity__Code--YDID mailto:] к указанному
        #[+Term--YDID строчному значению], которое, как ожидается, представляет собой желаемый адрес электронной почты.
      Если Ваш реактор кода или #[+Term--YDID интегрированная среда разработки] #[+Keyword--YDID не] имеет
        функциональности автодополнения по шаблонам, то данная #[+Term--YDID функция] едва ли будет иметь для Вас
        ценность — что #[+ImportantEntity__Code--YDID mailto:] надо запоминать или каждый раз искать в справочниках,
        что имя #[+Term--YDID функции] #[+ImportantEntity__Code--YDID buildEmailLinkHrefAttributeValue].

    p.Article-Paragraph
      | Если же функциональность автодополнения по шаблонам имеется, то #[+Keyword--YDID достаточно]
      |   #[+Keyword__Contrast--YDID начать] вводить #[+SecondaryEntity__Code--YDID buildE...], как появится вплывающая
      |   подсказка, а далее всё зависит от того, как реализовано автодополнение в редакторе кода или
      |   #[+Term--YDID интегрированной среде разработки].
      | В случае с
      |
      +Link--YDF({ unendorsedExternalURI: sharedExternalLinks.jetBrains.liveTemplates }).Article-Link Live Template-ом
      |
      |   из
      +Link--YDF({ unendorsedExternalURI: sharedExternalLinks.jetBrains.YDF_Plugin }).Article-Link официального плагина YDF
      |
      |   для
      +Link--YDF({ unendorsedExternalURI: sharedExternalLinks.jetBrains.intelliJ_IDEA_FamilyIDEs }).Article-Link.
        интегрированных сред разработки семейства IntelliJ IDEA
      |   происходит автоматическая подстановка #[+Keyword--YDID предварительно] скопированного в буфер обмена значения
      |   на место #[+Keyword--YDID единственного] #[+Term--YDID параметра],
      |   а потому заполнение значения #[+Term--YDID аттрибута] #[+ImportantEntity__Code--YDID href] c использованием
      |   #[+Term--YDID функции] #[+ImportantEntity__Code--YDID buildEmailLinkHrefAttributeValue] можно завершить в
      |   3-4 нажатия клавиш (в зависимости от того, сколько других автодополнений будет предложено):

    +SingleImageViewer--YDF({
      imageURI: "@AssociatedWithPages/CoreLibrary/Markup/Functionality/InlineJavaScript/FunctionsAndClasses/" +
          "buildEmailLinkHrefAttributeValue/Images/buildEmailLinkHrefAttributeValue-LiveTemplate",
      imageAlternateText:
          "Быстрый ввод выражения вызова функции «buildEmailLinkHrefAttributeValue» из библиотеки " +
            "«Yamato Daiwa Frontend» (сокращённо: «YDF») в интегрированных средах разработки семейства «IntelliJ IDEA» " +
            "с помощью функциональности «Live Templates».",
      maximalWidth__anyValidCSS_Value: "600px",
      autoAspectRatioByYDA: true
    })
