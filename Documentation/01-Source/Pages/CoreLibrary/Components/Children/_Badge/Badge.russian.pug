extends ../../../../../../node_modules/@yamato-daiwa/programming_documentation/Layouts/TwoColumns/TwoColumnsLayout.pug


block append Requirements

  include ../../../../../SharedAssets/Markup/SharedAssets.russian.pug
  include ../../../../../SharedComponents/SharedComponents.russian.pug


block append Metadata

  -

    RegularWebPageTemplate__YDF.configure({
      metadata: {
        title: buildHTML_PageTitle("Badge"),
        description:
            "В «Yamato Daiwa Frontend», «Badge» является неинтерактивным компонентом для отображения важных метаданных, " +
              "например категории товара, даты и времени события и так далее."
      },
      stylesSheetsURIs: [
        "$CommonStyles",
        "$LayoutsStyles/TwoColumns/TwoColumnsLayout.css",
        "$PreMadesStyles",
        "@CustomizedExternalComponents"
      ]
    });

    RoutingEmulator.setCurrentRoute("coreLibrary.components.Badge");

    LanguageDropDownList__YDF_DK.setLinks({
      english: "./Badge.english.html",
      japanese: "./Badge.japanese.html"
    });

    const componentPropertiesSpecification = {

      typeName: "Properties",
      localizedDescriptiveHeading: "Свойства",

      propertiesSpecification: {

        key: {
          ...Badge__YDF.propertiesSpecification.key,
          localizedInterpretation: "Ключ (левая надпись)"
        },

        value: {
          ...Badge__YDF.propertiesSpecification.value,
          localizedInterpretation: "Значение (единственная либо правая надпись)"
        },

        theme: {
          ...Badge__YDF.propertiesSpecification.theme,
          localizedInterpretation: "Тема",
          defaultValue: "Badge__YDF.Themes.regular",
          allowedAlternatives: [
            ...Badge__YDF.propertiesSpecification.
                  theme.
                  allowedAlternatives.
                  map(keyAndValuePair => keyAndValuePair.key),
            [
              { text: "(Любые, определённые через " },
              { code: "Badge__YDF.defineThemes()" },
              { text: ")" }
            ]
          ]
        },

        areThemesCSS_ClassesCommon: {
          ...Badge__YDF.propertiesSpecification.areThemesCSS_ClassesCommon,
          localizedInterpretation: "Являются ли CSS-классы тем общими для всех компонентов",
          defaultValue: "Badge__YDF.areThemesCSS_ClassesCommon"
        },

        geometricVariation: {
          ...Badge__YDF.propertiesSpecification.geometry,
          localizedInterpretation: "Геометрия (геометрическая вариация)",
          defaultValue: "Badge__YDF.GeometricVariations.regular",
          allowedAlternatives: [
            "Badge__YDF.GeometricVariations.regular",
            [
              { text: "(Любые, определённые через " },
              { code: "Badge__YDF.defineGeometricVariations()" },
              { text: ")" }
            ]
          ]
        },

        geometricModifiers: {
          ...Badge__YDF.propertiesSpecification.geometricModifiers,
          localizedInterpretation: "Геометрические модификаторы",
          type: "Array&lt;Badge__YDF.GeometricModifiers&gt;",
          allowedAlternatives: [
            "Badge__YDF.GeometricModifiers.pillShape",
            "Badge__YDF.GeometricModifiers.singleLine"
          ]
        },

        decorativeVariation: {
          ...Badge__YDF.propertiesSpecification.decoration,
          localizedInterpretation: "Декорация (декоративная вариация)",
          allowedAlternatives: [
            "Badge__YDF.DecorativeVariations.veryCatchyBright",
            "Badge__YDF.DecorativeVariations.catchyBright",
            "Badge__YDF.DecorativeVariations.modestlyCatchyBright",
            "Badge__YDF.DecorativeVariations.neutralBright",
            "Badge__YDF.DecorativeVariations.modestlyCalmingBright",
            "Badge__YDF.DecorativeVariations.calmingBright",
            "Badge__YDF.DecorativeVariations.achromaticBright",
            "Badge__YDF.DecorativeVariations.veryCatchyPastel",
            "Badge__YDF.DecorativeVariations.catchyPastel",
            "Badge__YDF.DecorativeVariations.modestlyCatchyPastel",
            "Badge__YDF.DecorativeVariations.neutralPastel",
            "Badge__YDF.DecorativeVariations.modestlyCalmingPastel",
            "Badge__YDF.DecorativeVariations.calmingPastel",
            "Badge__YDF.DecorativeVariations.achromaticPastel",
            [
              { text: "(Любые, определённые через " },
              { code: "Badge__YDF.defineDecorativeVariations()" },
              { text: ")" }
            ]
          ]
        },

        decorativeModifiers: {
          ...Badge__YDF.propertiesSpecification.decorativeModifiers,
          localizedInterpretation: "Декоративные модификаторы",
          type: "Array&lt;Badge__YDF.DecorativeModifiers&gt;",
          allowedAlternatives: [
            "Badge__YDF.DecorativeModifiers.bordersDisguising"
          ]
        },

        rootElementTag: {
          ...Badge__YDF.propertiesSpecification.rootElementTag,
          localizedInterpretation: "Тэг корневого элемента",
          defaultValue: "ARE_YDF_COMPONENTS_DECORATIONS_EXTERNAL_BY_DEFAULT || Badge__YDF.areDecorationsExternal"
        }

      }
    };


block append HeadScripts

  if __IS_PRODUCTION_BUILDING_MODE__

    +GoogleAnalyticsScript


block append SpecificContent

  article

    h1.Article-Heading1 #[code Badge] — Значок

    p.Article-Paragraph.
      В рамках #[+ImportantEntity--YDID YDF], #[+DefinableTerm--YDID значок (badge)] - информационный
        #[+Keyword--YDID неинтерактивный] компонент, отображающий внутри прямоугольника со скруглёнными углами либо без
         таковых слово, фразу и/или иконку.
      Как правило, содержит какие-либо метаданные, например категорию чего-либо, дату и так далее.

    p.Article-Paragraph.
      В других фреймворках схожие компоненты могут иметь другие названия: #[+Term--YDID Chip], #[+Term--YDID Pill],
        #[+Term--YDID Tag].
      Официальных определений у этих компонентов, а также официально установленных чётких различий #[+Keyword--YDID нет]:
        иногда в зависимости от фреймворка один и тот же компонент называется разными словами, а некоторые фреймворки
        дают свои определения, право чего оставляет за собой и #[+ImportantEntity--YDID YDF].

    p.Article-Paragraph.
      #[+ImportantEntity--YDID YDF] называет #[+Term--YDID значком] именно #[+Keyword--YDID неинтерактивный] компонент,
        который лишь отображает информацию.
      Его следует отличать от аналогичных компонентов, с которыми можно взаимодействовать: использовать в качестве
        кнопки или ссылки, скрывать по клику на соответствующую внутреннюю кнопку и так далее.

    +WebPageViewer--YDF({
      URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage.html",
      title: "Примеры использования компонента «Badge»"
    })


    h2.Article-Heading2 Сводка

    dl.Article-DescriptionList

      dt Pug-примесь
      dd #[+ImportantEntity__Code--YDID Badge--YDF]

      dt Live template Pug-примеси (семейство сред разработки IntelliJ IDEA)
      dd #[+ImportantEntity__Code--YDID badge-ydf]

      dt Stylus-примесь
      dd #[+ImportantEntity__Code--YDID provideBadgeYDF_Component]

      dt Готовые темы
      dd
        dl
          each themeValue in Object.values(Badge__YDF.Themes)
            case themeValue
              when Badge__YDF.Themes.regular
                dt #[+ImportantEntity__Code--YDID Badge__YDF.Themes.regular]
                dd Базовая (по умолчанию)

      dt Готовые геометрические вариации
      dd
        dl
          each geometricVariationValue in Object.values(Badge__YDF.GeometricVariations)
            case geometricVariationValue
              when Badge__YDF.GeometricVariations.regular
                dt #[+ImportantEntity__Code--YDID Badge__YDF.GeometricVariations.regular]
                dd Базовая (по умолчанию)

      dt Геометрические модификаторы
      dd
        dl

          - for (const [ geometricModifierKey, geometricModifierValue ] of Object.entries(Badge__YDF.GeometricModifiers))

            dt #[+ImportantEntity__Code--YDID Badge__YDF.GeometricModifiers.#{ geometricModifierKey }]
            dd
              case geometricModifierValue

                when Badge__YDF.GeometricModifiers.pillShape
                  | Максимальное скругление углов

                when Badge__YDF.GeometricModifiers.singleLine
                  | Всегда одна строка с усечением текста при нехватке ширины

      dt Готовые декоративные вариации
      dd
        dl

          - for (const [ decorativeVariationKey, decorativeVariationValue ] of Object.entries(Badge__YDF.DecorativeVariations))

            dt #[+ImportantEntity__Code--YDID Badge__YDF.DecorativeVariations.#{ decorativeVariationKey }]
            dd
              case decorativeVariationValue

                when Badge__YDF.DecorativeVariations.veryCatchyBright
                  | Очень броская яркая (красная по умолчанию)

                when Badge__YDF.DecorativeVariations.catchyBright
                  | Броская яркая (оранжевая по умолчанию)

                when Badge__YDF.DecorativeVariations.modestlyCatchyBright
                  | Умеренно броская яркая (жёлтая по умолчанию)

                when Badge__YDF.DecorativeVariations.neutralBright
                  | Нейтральная яркая (голубая по умолчанию)

                when Badge__YDF.DecorativeVariations.modestlyCalmingBright
                  | Умеренно успокаивающая яркая (синяя по умолчанию)

                when Badge__YDF.DecorativeVariations.calmingBright
                  | Успокаивающая яркая (зелёная по умолчанию)

                when Badge__YDF.DecorativeVariations.achromaticBright
                  | Ахроматическая яркая (тёмно-серая по умолчанию)

                when Badge__YDF.DecorativeVariations.veryCatchyPastel
                  | Очень броская пастельная (красная по умолчанию)

                when Badge__YDF.DecorativeVariations.catchyPastel
                  | Броская пастельная (оранжевая по умолчанию)

                when Badge__YDF.DecorativeVariations.modestlyCatchyPastel
                  | Умеренно броская пастельная (жёлтая по умолчанию)

                when Badge__YDF.DecorativeVariations.neutralPastel
                  | Нейтральная пастельная (голубая по умолчанию)

                when Badge__YDF.DecorativeVariations.modestlyCalmingPastel
                  | Умеренно успокаивающая пастельная (синяя по умолчанию)

                when Badge__YDF.DecorativeVariations.calmingPastel
                  | Успокаивающая пастельная (зелёная по умолчанию)

                when Badge__YDF.DecorativeVariations.achromaticPastel
                  | Ахроматическая пастельная (светло-серая по умолчанию)


      dt Декоративные модификаторы
      dd
        dl

          - for (const [ decorativeModifierKey, decorativeModifierValue ] of Object.entries(Badge__YDF.DecorativeModifiers))

            dt #[+ImportantEntity__Code--YDID Badge__YDF.GeometricModifiers.#{ decorativeModifierKey }]
            dd
              case decorativeModifierValue

                when Badge__YDF.DecorativeModifiers.bordersDisguising
                  | Эффект отсутствия обводки без изменения размеров

                when Badge__YDF.DecorativeModifiers.noBackground
                  | Без заливки

      dt Loading placeholder
      dd Доступен (Pug-примесь #[+ImportantEntity__Code--YDID Badge--YDF-LoadingPlaceholder])


    h2.Article-Heading2 Использование
    h3.Article-Heading3 Разметка

    h4.Article-Heading4 Подключение в проект

    +ComponentMarkupProvidingGuidanceFragment({ componentName: "Badge" })


    h4.Article-Heading4 Программный интерфейс
    h5.Article-Heading5 Pug-примесь #[code Badge--YDF]

    +CallableExpressionScheme--YDF_DK({
      technicalName: "Badge--YDF",
      parametersSpecification: [
        {
          genericTechnicalName: "properties",
          localizedName: "Свойства",
          type: "Properties",
          required: true
        }
      ],
      hiddenReturnValue: true
    })
      +ObjectTypeAbstract--YDF_DK(
        componentPropertiesSpecification
      ).CallableExpressionScheme--YDF_DK-AppendixGridFlow-FullWidthItem


    h6.Article-Heading6 Минимальный пример

    +WebPageViewer--YDF({
      URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-Minimal.html",
      title: "Минимальный пример компонента «Badge»"
    })

    p.Article-Paragraph.
      #[+Keyword--YDID Базовым] сценарием использования этого компонента является указание двух надписей:
        #[+DefinableTerm--YDID ключа] (#[+DefinableTerm--YDID key]) - задающей контекст надписи, отображающаяся в
        #[+Keyword--YDID правой] части,
        и #[+DefinableTerm--YDID значения] (#[+DefinableTerm--YDID value]) - содержащей в себе основную информацию,
        но зависящей от контекста надписи в #[+Keyword--YDID левой] части.

    .BadgePage-Example
      +Badge--YDF({
        key: "Скачиваний",
        value: "≈ 100 тыс.",
        decorativeVariation: Badge__YDF.DecorativeVariations.neutralBright
      })

    +CodeViewer--YDF
      +CodeViewer-Listing--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.Pug })
        :html_special_characters_to_html_entities
          +Badge--YDF({
            key: "Количество скачиваний",
            value: "≈ 100 тыс",
            decorativeVariation: Badge__YDF.DecorativeVariations.neutralBright
          })


    //-
      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-BordersDisguisingDecorativeModifier.html",
        title: "Примеры использования компонента «AdmonitionBlockGalleryPage»"
      })

      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-IconsAndKeysAndValues.html",
        title: "Примеры использования компонента «AdmonitionBlockGalleryPage»"
      })

      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-IconsAndValues.html",
        title: "Примеры использования компонента «AdmonitionBlockGalleryPage»"
      })

      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-KeysAndValues.html",
        title: "Примеры использования компонента «AdmonitionBlockGalleryPage»"
      })

      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-LoadingPlaceholder.html",
        title: "Примеры использования компонента «AdmonitionBlockGalleryPage»"
      })

      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-LongLabels.html",
        title: "Примеры использования компонента «AdmonitionBlockGalleryPage»"
      })

      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-Minimal.html",
        title: "Примеры использования компонента «AdmonitionBlockGalleryPage»"
      })

      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-NoBackgroundDecorativeModifier.html",
        title: "Примеры использования компонента «AdmonitionBlockGalleryPage»"
      })

      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-PillShapeGeometricModifier.html",
        title: "Примеры использования компонента «AdmonitionBlockGalleryPage»"
      })

      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-SingleLineGeometricModifier.html",
        title: "Примеры использования компонента «AdmonitionBlockGalleryPage»"
      })

    //-
      h6.Article-Heading6 key

      +WebPageViewer--YDF({
        URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-KeysAndValues.html",
        title: "Минимальный пример компонента «Badge»"
      })

      +PropertyMetadata--YDF_DK(componentPropertiesSpecification.propertiesSpecification.key)

      p.Article-Paragraph.
        #[+Keyword--YDID Базовым] сценарием использования этого компонента является указание двух надписей:
          #[+DefinableTerm--YDID ключа] (#[+DefinableTerm--YDID key]) - задающей контекст надписи, отображающаяся в
          #[+Keyword--YDID правой] части,
          и #[+DefinableTerm--YDID значения] (#[+DefinableTerm--YDID value]) - содержащей в себе основную информацию,
          но зависящей от контекста надписи в #[+Keyword--YDID левой] части.

      .BadgePage-Example
        +Badge--YDF({
          key: "Скачиваний",
          value: "≈ 100 тыс.",
          decorativeVariation: Badge__YDF.DecorativeVariations.neutralBright
        })

      +CodeViewer--YDF
        +CodeViewer-Listing--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.Pug })
          :html_special_characters_to_html_entities
            +Badge--YDF({
              key: "Количество скачиваний",
              value: "≈ 100 тыс",
              decorativeVariation: Badge__YDF.DecorativeVariations.neutralBright
            })


      +CodeViewer--YDF.Article-CodeViewer
        +CodeViewer-TabPanel--YDF({ codeLanguage: CodeViewer__YDF.SupportedCodesLanguages.TypeScript })

          +CodeViewer-PartialListing--YDF: :html_special_characters_to_html_entities
            +Badge--YDF({
              key: "Количество скачиваний",
              value: "≈ 100 тыс",
              decorativeVariation: Badge__YDF.DecorativeVariations.neutralBright
          +CodeViewer-Explanation--YDF.
            Поскольку #[+Term--YDID декоративной вариации] #[+Keyword--YDID по умолчанию] у данного компонента
              #[+Keyword__Contrast--YDID нет], то её необходимо указать в явном виде.

          +CodeViewer-PartialListing--YDF: :html_special_characters_to_html_entities
            })


      h6.Article-Heading6 value

      p.Article-Paragraph.
        Если контекст ясен и без #[+Term--YDID ключа], то #[+Term--YDID ключ] можно опустить.
        Например, в списке сообщений от других пользователей уместны значки с надписью "Новое" или "Непрочитанное":
          поскольку значок находится внутри карточки с сообщением, то эта карточка и является контекстом:

      +Badge--YDF({
        value: "Новое",
        decorativeVariation: Badge__YDF.DecorativeVariations.modestlyCalmingBright
      })

      p.Article-Paragraph.
        В то же время, #[+Keyphrase--YDID очевидность контекста часто является субъективной], потому опускать ключ нужно
          с осторожностью.


      h6.Article-Heading6 theme

      p.Article-Paragraph
        | #[+Keyword--YDID Основной] #[+Term--YDID npm-пакет] предлагает только #[+ImportantEntity--YDID 1]
        |
        +Link--YDF({
          internalURI: "localizedRouting.coreLibrary.$children.components.$sectioning.themes.$URI"
        }).Article-Link тему
        | , поэтому данное свойство имеет значение по умолчанию.
        | Если Вы хотите переопределить тему по умолчанию или добавить новые, то смотрите
        +Link--YDF({
          internalURI: "localizedRouting.coreLibrary.$children.components.$sectioning.customization.$URI"
        }).Article-Link соответствующее руководство
        | .


      h6.Article-Heading6 geometricModifiers

      p.Article-Paragraph.
        #[+DefinableTerm--YDID Геометрические модификаторы] предназначены для того, чтобы не создавать новую
          #[+Term--YDID геометрическую вариацию] ради #[+Keyword--YDID небольшого] изменения геометрии по необходимости,
          например, добавление максимального скругления углов.


      h6.Article-Heading6 decoration

      p.Article-Paragraph.
        Декоративных вариаций для данного компонента предлагается много, но их можно разделить на 2 группы:
          яркие тона (оканчиваются на bright) и пастельные тона (оканчиваются на pastel).

      p.Article-Paragraph.
        #[+DefinableTerm--YDID Декоративные модификаторы] предназначены для того, чтобы не создавать новую
          #[+Term--YDID декоративную вариацию] ради #[+Keyword--YDID небольшого] изменения декорации по необходимости,
          например.

      //-
        +WebPageViewer--YDF({
          URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-IconsAndKeysAndValues.html",
          title: "Минимальный пример компонента «Badge»"
        })

        +WebPageViewer--YDF({
          URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-IconsAndValues.html",
          title: "Минимальный пример компонента «Badge»"
        })

        +WebPageViewer--YDF({
          URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-KeysAndValues.html",
          title: "Минимальный пример компонента «Badge»"
        })

        +WebPageViewer--YDF({
          URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-LoadingPlaceholder.html",
          title: "Минимальный пример компонента «Badge»"
        })

        +WebPageViewer--YDF({
          URI: "$Demos:CorePackage/Components/Badge/BadgeGalleryPage-LongLabels.html",
          title: "Минимальный пример компонента «Badge»"
        })

      h4.Article-Heading4 Класс Badge__YDF

      p.Article-Paragraph.
        Предназначен для хранения информации, связанным с компонентом Badge - тем, вариаций, данные валидации свойств
          и так далее.


      h4.Article-Heading4 Класс Badge__YDF

      p.Article-Paragraph.
        Предназначен для хранения информации, связанным с компонентом Badge - тем, вариаций, данные валидации свойств
          и так далее.



      h2.Article-Heading2 Адаптации для фреймворков

      +AdmonitionBlock--YDF({ decorativeVariation: AdmonitionBlock__YDF.DecorativeVariations.warning, SVG_Icon: true }).
        Адаптации для фреймворков дают только новую разметку и логику, а всё, что касается стилей, поставляется
          основным пакетом согласно описанному выше.
